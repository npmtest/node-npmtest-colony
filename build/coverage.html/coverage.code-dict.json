{"/home/travis/build/npmtest/node-npmtest-colony/test.js":"/* istanbul instrument in package npmtest_colony */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-colony/lib.npmtest_colony.js":"/* istanbul instrument in package npmtest_colony */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_colony = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_colony = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-colony/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-colony && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_colony */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_colony\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_colony.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_colony.rollup.js'] =\n            local.assetsDict['/assets.npmtest_colony.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_colony.__dirname + '/lib.npmtest_colony.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-colony/node_modules/colony/index.js":"module.exports = require('./lib/index')","/home/travis/build/npmtest/node-npmtest-colony/node_modules/colony/lib/index.js":"var highlight = require('highlight.js').highlight\n  , autohighlight = require('highlight.js').highlightAuto\n  , spawn = require('child_process').spawn\n  , reqursive = require('reqursive')\n  , marked = require('marked')\n  , wrench = require('wrench')\n  , utils = require('./utils')\n  , async = require('async')\n  , path = require('path')\n  , ejs = require('ejs')\n  , fs = require('fs')\n\nvar colony = module.exports = {}\n\nmarked.setOptions({\n    gfm: true,\n    sanitize: true,\n    pedantic: false,\n    highlight: function(code, lang) {\n        if (!lang) return\n        if (!code) return code\n\n        if (lang === 'js') {\n            lang = 'javascript'\n            return highlight(lang, code).value\n        }\n\n        return autohighlight(code).value\n    }\n})\n\n/**\n * Load the required files' data, plus\n * markdown-formatted readme.\n *\n * @param  {Array|String} filenames One or more filenames to traverse over.\n * @param  {Object}       options\n * @param  {Function}     callback\n */\ncolony.generate = function(filenames, options, callback) {\n    var options = options || {}\n      , callback = callback || function(){}\n\n    filenames = Array.isArray(filenames) ? filenames : [filenames]\n\n    options.readme = options.readme ?\n        path.resolve(options.readme) :\n        utils.guessReadme(filenames)\n\n    return reqursive(filenames, options, function (err, files) {\n        if (err) return callback(err)\n\n        files.slice(0, filenames.length).forEach(function(file) {\n            file.root = true\n        })\n\n        files = files.filter(function(file) {\n            return !file.native\n        })\n\n        data = colony.force(files)\n        data.scale = parseFloat(options.scale) || 1\n\n        fs.readFile(options.readme || '', 'utf8', function(err, readme) {\n            var readme = err ? false : marked(readme)\n\n            callback(null, {\n                  data: data\n                , readme: readme\n            })\n        })\n    })\n};\n\n/**\n * Download one or more NPM modules to a temporary\n * folder before calling colony.build() on them.\n *\n * @param  {String}   modules  An array of module names to pass to `npm install`\n * @param  {Object}   options\n * @param  {Function} callback\n */\ncolony.npm = function(modules, options, callback) {\n    var moduleFolder = path.resolve('colony.tmp')\n      , cwd = process.cwd()\n      , npmName = process.platform === 'win32' ? 'npm.cmd' : 'npm'\n\n    utils.safemkdir(moduleFolder)\n\n    fs.writeFileSync(path.join(moduleFolder, 'package.json'), JSON.stringify({\n          name: 'colony-render'\n        , description: 'Placeholder for quick install of modules'\n        , private: true\n    }, null, 2) + '\\n', 'utf8')\n\n    var npm = spawn(npmName, ['install'].concat(modules), {\n          cwd: moduleFolder\n        , env: process.env\n    })\n\n    npm.stdout.pipe(process.stdout, { end: false })\n    npm.stderr.pipe(process.stderr, { end: false })\n\n    npm.once('exit', function(code) {\n        if (code !== 0) return callback(new Error('NPM exited with code ' + code))\n\n        modules = fs.readdirSync(path.join(moduleFolder, 'node_modules'))\n        modules = modules.filter(function(folder) {\n            return folder.indexOf('.')\n        }).map(function(folder) {\n            return require.resolve(\n                path.resolve(moduleFolder, 'node_modules/' + folder)\n            )\n        })\n\n        modules = modules.concat(options.others || [])\n\n        callback(null, modules)\n    })\n};\n\n/**\n * Swaps the results of `reqursive` out for\n * a d3-friendly force layout structure.\n */\ncolony.force = function(data) {\n    var index\n      , links\n      , nodes\n\n    data = data.filter(function(file) {\n        return file.filename\n    })\n\n    index = data.reduce(function(index, file, n) {\n        file.index = n\n        index[file.filename] = file\n        return index\n    }, {})\n\n    links = data.reduce(function(links, file) {\n\n        file.parents.forEach(function(child) {\n            if (!index[child]) return\n            if (typeof index[child].index === 'undefined') return\n\n            links.push({\n                source: index[child].index,\n                target: file.index\n            })\n        })\n\n        return links\n    }, [])\n\n    nodes = data.map(function(file) {\n        delete file.parents\n        return file\n    })\n\n    return {\n          nodes: data\n        , links: links\n    };\n};\n\ncolony.build = function(filenames, options, callback) {\n    var options = options || {}\n      , sourcedirs\n\n    var templates = {\n          index: ejs.compile(fs.readFileSync(__dirname + '/../views/index.ejs', 'utf8'))\n        , readme: ejs.compile(fs.readFileSync(__dirname + '/../views/readme.ejs', 'utf8'))\n    };\n\n    filenames = Array.isArray(filenames) ? filenames : [filenames]\n\n    options.directory = options.directory || path.resolve(process.cwd(), 'colony')\n    options.filedir   = options.filedir || path.resolve(options.directory, 'files')\n\n    colony.generate(filenames, {\n          traverseModules: options.traverseModules\n        , readme: options.readme\n        , title: options.title\n        , scale: options.scale\n        , absolute: true\n    }, function(err, res) {\n        if (err) return callback(err)\n\n        var index = path.resolve(options.directory, 'index.html')\n\n        utils.safemkdir(options.directory)\n        utils.safemkdir(options.filedir)\n\n        filenames.forEach(function(name, i) {\n            utils.safemkdir(path.resolve(options.filedir, i+''))\n        })\n\n        wrench.copyDirSyncRecursive(__dirname + '/../public', options.directory)\n\n        var scripts = res.data.nodes.filter(function(file) {\n            return file && file.filename\n        }).map(function(file) {\n            var source = file.filename\n\n            file.filename = utils.findParent(file.filename, filenames)\n\n            return {\n                  source: source\n                , dest: path.resolve(options.filedir, file.filename) + '.html'\n                , id: file.id\n            };\n        });\n\n        var html = templates.index({\n              files: res.data\n            , readme: res.readme\n            , title: options.title\n            , fork: options.fork || ''\n        })\n\n        fs.writeFileSync(index, html, 'utf8')\n\n        buildScriptPages(scripts, templates.readme, callback)\n    });\n};\n\nfunction buildScriptPages(scripts, template, callback) {\n    async.map(scripts, function(file, next) {\n        fs.readFile(file.source, 'utf8', function(err, contents) {\n            if (err) return next(null, false)\n\n            contents = contents.split('\\n')\n            while (/^\\s*?$/.test(contents[0])) {\n                contents.shift()\n            }\n            contents = contents.join('\\n')\n\n            utils.safemkdirp(path.dirname(file.dest))\n\n            contents = /\\.(js|json)$/gi.test(file.source) ?\n                  highlight('javascript', contents).value\n                : autohighlight(contents).value\n\n            contents = template({\n                  name: file.id\n                , contents: contents\n            })\n\n            fs.writeFile(file.dest, contents, 'utf8', next)\n        })\n    }, callback)\n};\n","/home/travis/build/npmtest/node-npmtest-colony/node_modules/colony/lib/utils.js":"var path = require('path')\n  , wrench = require('wrench')\n  , fs = require('fs')\n\nvar utils = module.exports = {}\n\nutils.safemkdirp = function(dir) {\n    try {\n        wrench.mkdirSyncRecursive(dir)\n    } catch(e) { return false }\n    return true\n};\n\nutils.safemkdir = function(directory) {\n    try {\n        fs.mkdirSync(directory)\n    } catch(e) { return false }\n    return true\n};\n\n// Works out the most appropriate\n// parent group to stick the file in\nutils.findParent = function(file, parents) {\n    var choice\n\n    choice = parents.map(function(parent, n) {\n        parent = path.dirname(parent)\n        return {\n            dir: path.relative(parent, file)\n            , n: n\n        }\n    }).sort(function(a, b) {\n        a = a.dir.match(/\\.\\./g)\n        b = b.dir.match(/\\.\\./g)\n\n        a = a ? a.length : 0\n        b = b ? b.length : 0\n\n        return a - b\n    })[0]\n\n    return path.join(choice.n+'', choice.dir)\n};\n\nutils.guessReadme = function(filenames) {\n    var directories = filenames.map(function(filename) {\n        return path.resolve(path.dirname(filename))\n    })\n\n    var readmes = directories.map(function(dir) {\n        return fs.readdirSync(dir).filter(function(file) {\n            return file.match(/^readme\\.(md|markdown|)$/i)\n        })[0]\n    }).filter(function(f) {\n        return f\n    })\n\n    if (!readmes.length) return false\n\n    return path.resolve(path.dirname(filenames[0]), readmes[0])\n};\n\nutils.getModuleVersion = function(filename) {\n    var dirname = path.dirname(filename)\n      , pkg = path.resolve(dirname, 'package.json')\n      , json\n\n    try {\n        json = fs.readFileSync(pkg, 'utf8')\n        json = JSON.parse(json).version\n    } catch(e) {\n        return false\n    }\n\n    return json\n};\n","/home/travis/build/npmtest/node-npmtest-colony/node_modules/colony/src/resize.js":"var resize = module.exports = function(handler) {\n    var original = window.onresize || function (){\n        return true\n    };\n\n    window.onresize = function() {\n        var args = Array.prototype.slice.call(arguments)\n\n        return handler.apply(this, args) !== false &&\n              original.apply(this, args)\n    };\n};","/home/travis/build/npmtest/node-npmtest-colony/node_modules/colony/public/js/colony.js":"(function(){var require = function (file, cwd) {\n    var resolved = require.resolve(file, cwd || '/');\n    var mod = require.modules[resolved];\n    if (!mod) throw new Error(\n        'Failed to resolve module ' + file + ', tried ' + resolved\n    );\n    var cached = require.cache[resolved];\n    var res = cached? cached.exports : mod();\n    return res;\n};\n\nrequire.paths = [];\nrequire.modules = {};\nrequire.cache = {};\nrequire.extensions = [\".js\",\".coffee\",\".json\"];\n\nrequire._core = {\n    'assert': true,\n    'events': true,\n    'fs': true,\n    'path': true,\n    'vm': true\n};\n\nrequire.resolve = (function () {\n    return function (x, cwd) {\n        if (!cwd) cwd = '/';\n        \n        if (require._core[x]) return x;\n        var path = require.modules.path();\n        cwd = path.resolve('/', cwd);\n        var y = cwd || '/';\n        \n        if (x.match(/^(?:\\.\\.?\\/|\\/)/)) {\n            var m = loadAsFileSync(path.resolve(y, x))\n                || loadAsDirectorySync(path.resolve(y, x));\n            if (m) return m;\n        }\n        \n        var n = loadNodeModulesSync(x, y);\n        if (n) return n;\n        \n        throw new Error(\"Cannot find module '\" + x + \"'\");\n        \n        function loadAsFileSync (x) {\n            x = path.normalize(x);\n            if (require.modules[x]) {\n                return x;\n            }\n            \n            for (var i = 0; i < require.extensions.length; i++) {\n                var ext = require.extensions[i];\n                if (require.modules[x + ext]) return x + ext;\n            }\n        }\n        \n        function loadAsDirectorySync (x) {\n            x = x.replace(/\\/+$/, '');\n            var pkgfile = path.normalize(x + '/package.json');\n            if (require.modules[pkgfile]) {\n                var pkg = require.modules[pkgfile]();\n                var b = pkg.browserify;\n                if (typeof b === 'object' && b.main) {\n                    var m = loadAsFileSync(path.resolve(x, b.main));\n                    if (m) return m;\n                }\n                else if (typeof b === 'string') {\n                    var m = loadAsFileSync(path.resolve(x, b));\n                    if (m) return m;\n                }\n                else if (pkg.main) {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                }\n            }\n            \n            return loadAsFileSync(x + '/index');\n        }\n        \n        function loadNodeModulesSync (x, start) {\n            var dirs = nodeModulesPathsSync(start);\n            for (var i = 0; i < dirs.length; i++) {\n                var dir = dirs[i];\n                var m = loadAsFileSync(dir + '/' + x);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir + '/' + x);\n                if (n) return n;\n            }\n            \n            var m = loadAsFileSync(x);\n            if (m) return m;\n        }\n        \n        function nodeModulesPathsSync (start) {\n            var parts;\n            if (start === '/') parts = [ '' ];\n            else parts = path.normalize(start).split('/');\n            \n            var dirs = [];\n            for (var i = parts.length - 1; i >= 0; i--) {\n                if (parts[i] === 'node_modules') continue;\n                var dir = parts.slice(0, i + 1).join('/') + '/node_modules';\n                dirs.push(dir);\n            }\n            \n            return dirs;\n        }\n    };\n})();\n\nrequire.alias = function (from, to) {\n    var path = require.modules.path();\n    var res = null;\n    try {\n        res = require.resolve(from + '/package.json', '/');\n    }\n    catch (err) {\n        res = require.resolve(from, '/');\n    }\n    var basedir = path.dirname(res);\n    \n    var keys = (Object.keys || function (obj) {\n        var res = [];\n        for (var key in obj) res.push(key);\n        return res;\n    })(require.modules);\n    \n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (key.slice(0, basedir.length + 1) === basedir + '/') {\n            var f = key.slice(basedir.length);\n            require.modules[to + f] = require.modules[basedir + f];\n        }\n        else if (key === basedir) {\n            require.modules[to] = require.modules[basedir];\n        }\n    }\n};\n\n(function () {\n    var process = {};\n    var global = typeof window !== 'undefined' ? window : {};\n    var definedProcess = false;\n    \n    require.define = function (filename, fn) {\n        if (!definedProcess && require.modules.__browserify_process) {\n            process = require.modules.__browserify_process();\n            definedProcess = true;\n        }\n        \n        var dirname = require._core[filename]\n            ? ''\n            : require.modules.path().dirname(filename)\n        ;\n        \n        var require_ = function (file) {\n            var requiredModule = require(file, dirname);\n            var cached = require.cache[require.resolve(file, dirname)];\n\n            if (cached && cached.parent === null) {\n                cached.parent = module_;\n            }\n\n            return requiredModule;\n        };\n        require_.resolve = function (name) {\n            return require.resolve(name, dirname);\n        };\n        require_.modules = require.modules;\n        require_.define = require.define;\n        require_.cache = require.cache;\n        var module_ = {\n            id : filename,\n            filename: filename,\n            exports : {},\n            loaded : false,\n            parent: null\n        };\n        \n        require.modules[filename] = function () {\n            require.cache[filename] = module_;\n            fn.call(\n                module_.exports,\n                require_,\n                module_,\n                module_.exports,\n                dirname,\n                filename,\n                process,\n                global\n            );\n            module_.loaded = true;\n            return module_.exports;\n        };\n    };\n})();\n\n\nrequire.define(\"path\",function(require,module,exports,__dirname,__filename,process,global){function filter (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (fn(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length; i >= 0; i--) {\n    var last = parts[i];\n    if (last == '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Regex to split a filename into [*, dir, basename, ext]\n// posix version\nvar splitPathRe = /^(.+\\/(?!$)|\\/)?((?:.+?)?(\\.[^.]*)?)$/;\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\nvar resolvedPath = '',\n    resolvedAbsolute = false;\n\nfor (var i = arguments.length; i >= -1 && !resolvedAbsolute; i--) {\n  var path = (i >= 0)\n      ? arguments[i]\n      : process.cwd();\n\n  // Skip empty and invalid entries\n  if (typeof path !== 'string' || !path) {\n    continue;\n  }\n\n  resolvedPath = path + '/' + resolvedPath;\n  resolvedAbsolute = path.charAt(0) === '/';\n}\n\n// At this point the path should be resolved to a full absolute path, but\n// handle relative paths to be safe (might happen when process.cwd() fails)\n\n// Normalize the path\nresolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\nvar isAbsolute = path.charAt(0) === '/',\n    trailingSlash = path.slice(-1) === '/';\n\n// Normalize the path\npath = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n  \n  return (isAbsolute ? '/' : '') + path;\n};\n\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    return p && typeof p === 'string';\n  }).join('/'));\n};\n\n\nexports.dirname = function(path) {\n  var dir = splitPathRe.exec(path)[1] || '';\n  var isWindows = false;\n  if (!dir) {\n    // No dirname\n    return '.';\n  } else if (dir.length === 1 ||\n      (isWindows && dir.length <= 3 && dir.charAt(1) === ':')) {\n    // It is just a slash or a drive letter with a slash\n    return dir;\n  } else {\n    // It is a full dirname, strip trailing slash\n    return dir.substring(0, dir.length - 1);\n  }\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPathRe.exec(path)[2] || '';\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPathRe.exec(path)[3] || '';\n};\n\n});\n\nrequire.define(\"__browserify_process\",function(require,module,exports,__dirname,__filename,process,global){var process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n        && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n        && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            if (ev.source === window && ev.data === 'browserify-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('browserify-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nprocess.binding = function (name) {\n    if (name === 'evals') return (require)('vm')\n    else throw new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    process.cwd = function () { return cwd };\n    process.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\n});\n\nrequire.define(\"/node_modules/d3/package.json\",function(require,module,exports,__dirname,__filename,process,global){module.exports = {\"main\":\"index.js\",\"browserify\":\"index-browserify.js\"}\n});\n\nrequire.define(\"/node_modules/d3/index-browserify.js\",function(require,module,exports,__dirname,__filename,process,global){require(\"./d3.v2\");\nmodule.exports = d3;\n});\n\nrequire.define(\"/node_modules/d3/d3.v2.js\",function(require,module,exports,__dirname,__filename,process,global){(function() {\n  function d3_class(ctor, properties) {\n    try {\n      for (var key in properties) {\n        Object.defineProperty(ctor.prototype, key, {\n          value: properties[key],\n          enumerable: false\n        });\n      }\n    } catch (e) {\n      ctor.prototype = properties;\n    }\n  }\n  function d3_arrayCopy(pseudoarray) {\n    var i = -1, n = pseudoarray.length, array = [];\n    while (++i < n) array.push(pseudoarray[i]);\n    return array;\n  }\n  function d3_arraySlice(pseudoarray) {\n    return Array.prototype.slice.call(pseudoarray);\n  }\n  function d3_Map() {}\n  function d3_identity(d) {\n    return d;\n  }\n  function d3_this() {\n    return this;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return arguments.length ? target : value;\n    };\n  }\n  function d3_number(x) {\n    return x != null && !isNaN(x);\n  }\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  function d3_splitter(d) {\n    return d == null;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_dispatch() {}\n  function d3_dispatch_event(dispatch) {\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    var listeners = [], listenerByName = new d3_Map;\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? 1 + Math.floor(Math.log(x + Math.pow(10, 1 + Math.floor(Math.log(x) / Math.LN10) - p)) / Math.LN10) : 1);\n  }\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  function d3_format_group(value) {\n    var i = value.lastIndexOf(\".\"), f = i >= 0 ? value.substring(i) : (i = value.length, \"\"), t = [];\n    while (i > 0) t.push(value.substring(i -= 3, i + 3));\n    return t.reverse().join(\",\") + f;\n  }\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, Math.abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_identity(t) {\n    return t;\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * Math.PI / 2);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length < 1) {\n      a = 1;\n      s = p / 4;\n    } else s = p / (2 * Math.PI) * Math.asin(1 / a);\n    return function(t) {\n      return 1 + a * Math.pow(2, 10 * -t) * Math.sin((t - s) * 2 * Math.PI / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  function d3_eventCancel() {\n    d3.event.stopPropagation();\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch, i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_transformDegrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_transformDegrees : 0;\n  }\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  function d3_interpolateByName(name) {\n    return name == \"transform\" ? d3.interpolateTransform : d3.interpolate;\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = b - (a = +a) ? 1 / (b - a) : 0;\n    return function(x) {\n      return (x - a) * b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = b - (a = +a) ? 1 / (b - a) : 0;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) * b));\n    };\n  }\n  function d3_Color() {}\n  function d3_rgb(r, g, b) {\n    return new d3_Rgb(r, g, b);\n  }\n  function d3_Rgb(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, name;\n    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (name = d3_rgb_names.get(format)) return rgb(name.r, name.g, name.b);\n    if (format != null && format.charAt(0) === \"#\") {\n      if (format.length === 4) {\n        r = format.charAt(1);\n        r += r;\n        g = format.charAt(2);\n        g += g;\n        b = format.charAt(3);\n        b += b;\n      } else if (format.length === 7) {\n        r = format.substring(1, 3);\n        g = format.substring(3, 5);\n        b = format.substring(5, 7);\n      }\n      r = parseInt(r, 16);\n      g = parseInt(g, 16);\n      b = parseInt(b, 16);\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      s = h = 0;\n    }\n    return d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  function d3_hsl(h, s, l) {\n    return new d3_Hsl(h, s, l);\n  }\n  function d3_Hsl(h, s, l) {\n    this.h = h;\n    this.s = s;\n    this.l = l;\n  }\n  function d3_hsl_rgb(h, s, l) {\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    var m1, m2;\n    h = h % 360;\n    if (h < 0) h += 360;\n    s = s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  function d3_hcl(h, c, l) {\n    return new d3_Hcl(h, c, l);\n  }\n  function d3_Hcl(h, c, l) {\n    this.h = h;\n    this.c = c;\n    this.l = l;\n  }\n  function d3_hcl_lab(h, c, l) {\n    return d3_lab(l, Math.cos(h *= Math.PI / 180) * c, Math.sin(h) * c);\n  }\n  function d3_lab(l, a, b) {\n    return new d3_Lab(l, a, b);\n  }\n  function d3_Lab(l, a, b) {\n    this.l = l;\n    this.a = a;\n    this.b = b;\n  }\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return d3_hcl(Math.atan2(b, a) / Math.PI * 180, Math.sqrt(a * a + b * b), l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  function d3_selection(groups) {\n    d3_arraySubclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  function d3_selection_selector(selector) {\n    return function() {\n      return d3_select(selector, this);\n    };\n  }\n  function d3_selection_selectorAll(selector) {\n    return function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  function d3_selection_attr(name, value) {\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    name = d3.ns.qualify(name);\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classed(name, value) {\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    name = name.trim().split(/\\s+/).map(d3_selection_classedName);\n    var n = name.length;\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.className, cb = c.baseVal != null, cv = cb ? c.baseVal : c;\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(cv)) {\n          cv = d3_collapse(cv + \" \" + name);\n          if (cb) c.baseVal = cv; else node.className = cv;\n        }\n      } else if (cv) {\n        cv = d3_collapse(cv.replace(re, \" \"));\n        if (cb) c.baseVal = cv; else node.className = cv;\n      }\n    };\n  }\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3.ascending;\n    return function(a, b) {\n      return comparator(a && a.__data__, b && b.__data__);\n    };\n  }\n  function d3_selection_on(type, listener, capture) {\n    function onRemove() {\n      var wrapper = this[name];\n      if (wrapper) {\n        this.removeEventListener(type, wrapper, wrapper.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      function wrapper(e) {\n        var o = d3.event;\n        d3.event = e;\n        args[0] = node.__data__;\n        try {\n          listener.apply(node, args);\n        } finally {\n          d3.event = o;\n        }\n      }\n      var node = this, args = arguments;\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = wrapper, wrapper.$ = capture);\n      wrapper._ = listener;\n    }\n    var name = \"__on\" + type, i = type.indexOf(\".\");\n    if (i > 0) type = type.substring(0, i);\n    return listener ? onAdd : onRemove;\n  }\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  function d3_selection_enter(selection) {\n    d3_arraySubclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  function d3_transition(groups, id, time) {\n    d3_arraySubclass(groups, d3_transitionPrototype);\n    var tweens = new d3_Map, event = d3.dispatch(\"start\", \"end\"), ease = d3_transitionEase;\n    groups.id = id;\n    groups.time = time;\n    groups.tween = function(name, tween) {\n      if (arguments.length < 2) return tweens.get(name);\n      if (tween == null) tweens.remove(name); else tweens.set(name, tween);\n      return groups;\n    };\n    groups.ease = function(value) {\n      if (!arguments.length) return ease;\n      ease = typeof value === \"function\" ? value : d3.ease.apply(d3, arguments);\n      return groups;\n    };\n    groups.each = function(type, listener) {\n      if (arguments.length < 2) return d3_transition_each.call(groups, type);\n      event.on(type, listener);\n      return groups;\n    };\n    d3.timer(function(elapsed) {\n      return d3_selection_each(groups, function(node, i, j) {\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          lock.active = id;\n          tweens.forEach(function(key, value) {\n            if (value = value.call(node, d, i)) {\n              tweened.push(value);\n            }\n          });\n          event.start.call(node, d, i);\n          if (!tick(elapsed)) d3.timer(tick, 0, time);\n          return 1;\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return stop();\n          var t = (elapsed - delay) / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            stop();\n            d3_transitionId = id;\n            event.end.call(node, d, i);\n            d3_transitionId = 0;\n            return 1;\n          }\n        }\n        function stop() {\n          if (!--lock.count) delete node.__transition__;\n          return 1;\n        }\n        var tweened = [], delay = node.delay, duration = node.duration, lock = (node = node.node).__transition__ || (node.__transition__ = {\n          active: 0,\n          count: 0\n        }), d = node.__data__;\n        ++lock.count;\n        delay <= elapsed ? start(elapsed) : d3.timer(start, delay, time);\n      });\n    }, 0, time);\n    return groups;\n  }\n  function d3_transition_each(callback) {\n    var id = d3_transitionId, ease = d3_transitionEase, delay = d3_transitionDelay, duration = d3_transitionDuration;\n    d3_transitionId = this.id;\n    d3_transitionEase = this.ease();\n    d3_selection_each(this, function(node, i, j) {\n      d3_transitionDelay = node.delay;\n      d3_transitionDuration = node.duration;\n      callback.call(node = node.node, node.__data__, i, j);\n    });\n    d3_transitionId = id;\n    d3_transitionEase = ease;\n    d3_transitionDelay = delay;\n    d3_transitionDuration = duration;\n    return this;\n  }\n  function d3_tweenNull(d, i, a) {\n    return a != \"\" && d3_tweenRemove;\n  }\n  function d3_tweenByName(b, name) {\n    return d3.tween(b, d3_interpolateByName(name));\n  }\n  function d3_timer_step() {\n    var elapsed, now = Date.now(), t1 = d3_timer_queue;\n    while (t1) {\n      elapsed = now - t1.then;\n      if (elapsed >= t1.delay) t1.flush = t1.callback(elapsed);\n      t1 = t1.next;\n    }\n    var delay = d3_timer_flush() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  function d3_timer_flush() {\n    var t0 = null, t1 = d3_timer_queue, then = Infinity;\n    while (t1) {\n      if (t1.flush) {\n        delete d3_timer_byId[t1.callback.id];\n        t1 = t0 ? t0.next = t1.next : d3_timer_queue = t1.next;\n      } else {\n        then = Math.min(then, t1.then + t1.delay);\n        t1 = (t0 = t1).next;\n      }\n    }\n    return then;\n  }\n  function d3_mousePoint(container, e) {\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0 && (window.scrollX || window.scrollY)) {\n        svg = d3.select(document.body).append(\"svg\").style(\"position\", \"absolute\").style(\"top\", 0).style(\"left\", 0);\n        var ctm = svg[0][0].getScreenCTM();\n        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n        svg.remove();\n      }\n      if (d3_mouse_bug44083) {\n        point.x = e.pageX;\n        point.y = e.pageY;\n      } else {\n        point.x = e.clientX;\n        point.y = e.clientY;\n      }\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  function d3_noop() {}\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    if (nice = nice(x1 - x0)) {\n      domain[i0] = nice.floor(x0);\n      domain[i1] = nice.ceil(x1);\n    }\n    return domain;\n  }\n  function d3_scale_niceDefault() {\n    return Math;\n  }\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3.interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    var output, input;\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3.interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m) {\n      return d3_scale_linearTickFormat(domain, m);\n    };\n    scale.nice = function() {\n      d3_scale_nice(domain, d3_scale_linearNice);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(dx) {\n    dx = Math.pow(10, Math.round(Math.log(dx) / Math.LN10) - 1);\n    return dx && {\n      floor: function(x) {\n        return Math.floor(x / dx) * dx;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / dx) * dx;\n      }\n    };\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m) {\n    return d3.format(\",.\" + Math.max(0, -Math.floor(Math.log(d3_scale_linearTickRange(domain, m)[2]) / Math.LN10 + .01)) + \"f\");\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  function d3_scale_log(linear, log) {\n    function scale(x) {\n      return linear(log(x));\n    }\n    var pow = log.pow;\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(pow);\n      log = x[0] < 0 ? d3_scale_logn : d3_scale_logp;\n      pow = log.pow;\n      linear.domain(x.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      linear.domain(d3_scale_nice(linear.domain(), d3_scale_niceDefault));\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(linear.domain()), ticks = [];\n      if (extent.every(isFinite)) {\n        var i = Math.floor(extent[0]), j = Math.ceil(extent[1]), u = pow(extent[0]), v = pow(extent[1]);\n        if (log === d3_scale_logn) {\n          ticks.push(pow(i));\n          for (; i++ < j; ) for (var k = 9; k > 0; k--) ticks.push(pow(i) * k);\n        } else {\n          for (; i < j; i++) for (var k = 1; k < 10; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (arguments.length < 2) format = d3_scale_logFormat;\n      if (arguments.length < 1) return format;\n      var k = Math.max(.1, n / scale.ticks().length), f = log === d3_scale_logn ? (e = -1e-12, Math.floor) : (e = 1e-12, Math.ceil), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), log);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_logp(x) {\n    return Math.log(x < 0 ? 0 : x) / Math.LN10;\n  }\n  function d3_scale_logn(x) {\n    return -Math.log(x > 0 ? 0 : -x) / Math.LN10;\n  }\n  function d3_scale_pow(linear, exponent) {\n    function scale(x) {\n      return linear(powp(x));\n    }\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(powb);\n      linear.domain(x.map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(scale.domain(), m);\n    };\n    scale.tickFormat = function(m) {\n      return d3_scale_linearTickFormat(scale.domain(), m);\n    };\n    scale.nice = function() {\n      return scale.domain(d3_scale_nice(scale.domain(), d3_scale_linearNice));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      var domain = scale.domain();\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      return scale.domain(domain);\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  function d3_scale_ordinal(domain, ranger) {\n    function scale(x) {\n      return range[((index.get(x) || index.set(x, domain.push(x))) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    var index, range, rangeBand;\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map;\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;\n      range = steps(start + Math.round(error / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  function d3_scale_quantile(domain, range) {\n    function rescale() {\n      var k = 0, n = domain.length, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (isNaN(x = +x)) return NaN;\n      return range[d3.bisect(thresholds, x)];\n    }\n    var thresholds;\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.filter(function(d) {\n        return !isNaN(d);\n      }).sort(d3.ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  function d3_scale_quantize(x0, x1, range) {\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    var kx, i;\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m) {\n      return d3_scale_linearTickFormat(domain, m);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_line(projection) {\n    function line(data) {\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    var x = d3_svg_lineX, y = d3_svg_lineY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  function d3_svg_lineX(d) {\n    return d[0];\n  }\n  function d3_svg_lineY(d) {\n    return d[1];\n  }\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension, closed) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0 ];\n    d3_svg_lineBasisBezier(path, px, py);\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    i = -1;\n    while (++i < 2) {\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (Math.abs(d) < 1e-6) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] + d3_svg_arcOffset;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    function area(data) {\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    var x0 = d3_svg_lineX, x1 = d3_svg_lineX, y0 = 0, y1 = d3_svg_lineY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  function d3_svg_chordSource(d) {\n    return d.source;\n  }\n  function d3_svg_chordTarget(d) {\n    return d.target;\n  }\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  function d3_svg_chordStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_chordEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / Math.PI);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  function d3_svg_axisX(selection, x) {\n    selection.attr(\"transform\", function(d) {\n      return \"translate(\" + x(d) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y) {\n    selection.attr(\"transform\", function(d) {\n      return \"translate(0,\" + y(d) + \")\";\n    });\n  }\n  function d3_svg_axisSubdivide(scale, ticks, m) {\n    subticks = [];\n    if (m && ticks.length > 1) {\n      var extent = d3_scaleExtent(scale.domain()), subticks, i = -1, n = ticks.length, d = (ticks[1] - ticks[0]) / ++m, j, v;\n      while (++i < n) {\n        for (j = m; --j > 0; ) {\n          if ((v = +ticks[i] - j * d) >= extent[0]) {\n            subticks.push(v);\n          }\n        }\n      }\n      for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1]; ) {\n        subticks.push(v);\n      }\n    }\n    return subticks;\n  }\n  function d3_behavior_zoomDelta() {\n    if (!d3_behavior_zoomDiv) {\n      d3_behavior_zoomDiv = d3.select(\"body\").append(\"div\").style(\"visibility\", \"hidden\").style(\"top\", 0).style(\"height\", 0).style(\"width\", 0).style(\"overflow-y\", \"scroll\").append(\"div\").style(\"height\", \"2000px\").node().parentNode;\n    }\n    var e = d3.event, delta;\n    try {\n      d3_behavior_zoomDiv.scrollTop = 1e3;\n      d3_behavior_zoomDiv.dispatchEvent(e);\n      delta = 1e3 - d3_behavior_zoomDiv.scrollTop;\n    } catch (error) {\n      delta = e.wheelDelta || -e.detail * 5;\n    }\n    return delta;\n  }\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= 1;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= 3;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  function d3_layout_forceLinkDistance(link) {\n    return 20;\n  }\n  function d3_layout_forceLinkStrength(link) {\n    return 1;\n  }\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (; i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.links = d3_layout_hierarchyLinks;\n    object.nodes = function(d) {\n      d3_layout_hierarchyInline = true;\n      return (object.nodes = object)(d);\n    };\n    return object;\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return dr * dr - dx * dx - dy * dy > .001;\n  }\n  function d3_layout_packSiblings(node) {\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(node) {\n    var children = node.children;\n    return children && children.length ? children[0] : node._tree.thread;\n  }\n  function d3_layout_treeRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? children[n - 1] : node._tree.thread;\n  }\n  function d3_layout_treeSearch(node, compare) {\n    var children = node.children;\n    if (children && (n = children.length)) {\n      var child, n, i = -1;\n      while (++i < n) {\n        if (compare(child = d3_layout_treeSearch(children[i], compare), node) > 0) {\n          node = child;\n        }\n      }\n    }\n    return node;\n  }\n  function d3_layout_treeRightmost(a, b) {\n    return a.x - b.x;\n  }\n  function d3_layout_treeLeftmost(a, b) {\n    return b.x - a.x;\n  }\n  function d3_layout_treeDeepest(a, b) {\n    return a.depth - b.depth;\n  }\n  function d3_layout_treeVisitAfter(node, callback) {\n    function visit(node, previousSibling) {\n      var children = node.children;\n      if (children && (n = children.length)) {\n        var child, previousChild = null, i = -1, n;\n        while (++i < n) {\n          child = children[i];\n          visit(child, previousChild);\n          previousChild = child;\n        }\n      }\n      callback(node, previousSibling);\n    }\n    visit(node, null);\n  }\n  function d3_layout_treeShift(node) {\n    var shift = 0, change = 0, children = node.children, i = children.length, child;\n    while (--i >= 0) {\n      child = children[i]._tree;\n      child.prelim += shift;\n      child.mod += shift;\n      shift += child.shift + (change += child.change);\n    }\n  }\n  function d3_layout_treeMove(ancestor, node, shift) {\n    ancestor = ancestor._tree;\n    node = node._tree;\n    var change = shift / (node.number - ancestor.number);\n    ancestor.change += change;\n    node.change -= change;\n    node.shift += shift;\n    node.prelim += shift;\n    node.mod += shift;\n  }\n  function d3_layout_treeAncestor(vim, node, ancestor) {\n    return vim._tree.ancestor.parent == node.parent ? vim._tree.ancestor : ancestor;\n  }\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  function d3_dsv(delimiter, mimeType) {\n    function dsv(url, callback) {\n      d3.text(url, mimeType, function(text) {\n        callback(text && dsv.parse(text));\n      });\n    }\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    var reParse = new RegExp(\"\\r\\n|[\" + delimiter + \"\\r\\n]\", \"g\"), reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    dsv.parse = function(text) {\n      var header;\n      return dsv.parseRows(text, function(row, i) {\n        if (i) {\n          var o = {}, j = -1, m = header.length;\n          while (++j < m) o[header[j]] = row[j];\n          return o;\n        } else {\n          header = row;\n          return null;\n        }\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      function token() {\n        if (reParse.lastIndex >= text.length) return EOF;\n        if (eol) {\n          eol = false;\n          return EOL;\n        }\n        var j = reParse.lastIndex;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < text.length) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              i++;\n            }\n          }\n          reParse.lastIndex = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) reParse.lastIndex++;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.substring(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        var m = reParse.exec(text);\n        if (m) {\n          eol = m[0].charCodeAt(0) !== delimiterCode;\n          return text.substring(j, m.index);\n        }\n        reParse.lastIndex = text.length;\n        return text.substring(j);\n      }\n      var EOL = {}, EOF = {}, rows = [], n = 0, t, eol;\n      reParse.lastIndex = 0;\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && !(a = f(a, n++))) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    return dsv;\n  }\n  function d3_geo_type(types, defaultValue) {\n    return function(object) {\n      return object && types.hasOwnProperty(object.type) ? types[object.type](object) : defaultValue;\n    };\n  }\n  function d3_path_circle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + +2 * radius + \"z\";\n  }\n  function d3_geo_bounds(o, f) {\n    if (d3_geo_boundsTypes.hasOwnProperty(o.type)) d3_geo_boundsTypes[o.type](o, f);\n  }\n  function d3_geo_boundsFeature(o, f) {\n    d3_geo_bounds(o.geometry, f);\n  }\n  function d3_geo_boundsFeatureCollection(o, f) {\n    for (var a = o.features, i = 0, n = a.length; i < n; i++) {\n      d3_geo_bounds(a[i].geometry, f);\n    }\n  }\n  function d3_geo_boundsGeometryCollection(o, f) {\n    for (var a = o.geometries, i = 0, n = a.length; i < n; i++) {\n      d3_geo_bounds(a[i], f);\n    }\n  }\n  function d3_geo_boundsLineString(o, f) {\n    for (var a = o.coordinates, i = 0, n = a.length; i < n; i++) {\n      f.apply(null, a[i]);\n    }\n  }\n  function d3_geo_boundsMultiLineString(o, f) {\n    for (var a = o.coordinates, i = 0, n = a.length; i < n; i++) {\n      for (var b = a[i], j = 0, m = b.length; j < m; j++) {\n        f.apply(null, b[j]);\n      }\n    }\n  }\n  function d3_geo_boundsMultiPolygon(o, f) {\n    for (var a = o.coordinates, i = 0, n = a.length; i < n; i++) {\n      for (var b = a[i][0], j = 0, m = b.length; j < m; j++) {\n        f.apply(null, b[j]);\n      }\n    }\n  }\n  function d3_geo_boundsPoint(o, f) {\n    f.apply(null, o.coordinates);\n  }\n  function d3_geo_boundsPolygon(o, f) {\n    for (var a = o.coordinates[0], i = 0, n = a.length; i < n; i++) {\n      f.apply(null, a[i]);\n    }\n  }\n  function d3_geo_greatArcSource(d) {\n    return d.source;\n  }\n  function d3_geo_greatArcTarget(d) {\n    return d.target;\n  }\n  function d3_geo_greatArcInterpolator() {\n    function interpolate(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) / d3_geo_radians, Math.atan2(z, Math.sqrt(x * x + y * y)) / d3_geo_radians ];\n    }\n    var x0, y0, cy0, sy0, kx0, ky0, x1, y1, cy1, sy1, kx1, ky1, d, k;\n    interpolate.distance = function() {\n      if (d == null) k = 1 / Math.sin(d = Math.acos(Math.max(-1, Math.min(1, sy0 * sy1 + cy0 * cy1 * Math.cos(x1 - x0)))));\n      return d;\n    };\n    interpolate.source = function(_) {\n      var cx0 = Math.cos(x0 = _[0] * d3_geo_radians), sx0 = Math.sin(x0);\n      cy0 = Math.cos(y0 = _[1] * d3_geo_radians);\n      sy0 = Math.sin(y0);\n      kx0 = cy0 * cx0;\n      ky0 = cy0 * sx0;\n      d = null;\n      return interpolate;\n    };\n    interpolate.target = function(_) {\n      var cx1 = Math.cos(x1 = _[0] * d3_geo_radians), sx1 = Math.sin(x1);\n      cy1 = Math.cos(y1 = _[1] * d3_geo_radians);\n      sy1 = Math.sin(y1);\n      kx1 = cy1 * cx1;\n      ky1 = cy1 * sx1;\n      d = null;\n      return interpolate;\n    };\n    return interpolate;\n  }\n  function d3_geo_greatArcInterpolate(a, b) {\n    var i = d3_geo_greatArcInterpolator().source(a).target(b);\n    i.distance();\n    return i;\n  }\n  function d3_geom_contourStart(grid) {\n    var x = 0, y = 0;\n    while (true) {\n      if (grid(x, y)) {\n        return [ x, y ];\n      }\n      if (x === 0) {\n        x = y + 1;\n        y = 0;\n      } else {\n        x = x - 1;\n        y = y + 1;\n      }\n    }\n  }\n  function d3_geom_hullCCW(i1, i2, i3, v) {\n    var t, a, b, c, d, e, f;\n    t = v[i1];\n    a = t[0];\n    b = t[1];\n    t = v[i2];\n    c = t[0];\n    d = t[1];\n    t = v[i3];\n    e = t[0];\n    f = t[1];\n    return (f - b) * (c - a) - (d - b) * (e - a) > 0;\n  }\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x2 = d[0], x3 = a[0], x4 = b[0], y1 = c[1], y2 = d[1], y3 = a[1], y4 = b[1], x13 = x1 - x3, x21 = x2 - x1, x43 = x4 - x3, y13 = y1 - y3, y21 = y2 - y1, y43 = y4 - y3, ua = (x43 * y13 - y43 * x13) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_voronoi_tessellate(vertices, callback) {\n    var Sites = {\n      list: vertices.map(function(v, i) {\n        return {\n          index: i,\n          x: v[0],\n          y: v[1]\n        };\n      }).sort(function(a, b) {\n        return a.y < b.y ? -1 : a.y > b.y ? 1 : a.x < b.x ? -1 : a.x > b.x ? 1 : 0;\n      }),\n      bottomSite: null\n    };\n    var EdgeList = {\n      list: [],\n      leftEnd: null,\n      rightEnd: null,\n      init: function() {\n        EdgeList.leftEnd = EdgeList.createHalfEdge(null, \"l\");\n        EdgeList.rightEnd = EdgeList.createHalfEdge(null, \"l\");\n        EdgeList.leftEnd.r = EdgeList.rightEnd;\n        EdgeList.rightEnd.l = EdgeList.leftEnd;\n        EdgeList.list.unshift(EdgeList.leftEnd, EdgeList.rightEnd);\n      },\n      createHalfEdge: function(edge, side) {\n        return {\n          edge: edge,\n          side: side,\n          vertex: null,\n          l: null,\n          r: null\n        };\n      },\n      insert: function(lb, he) {\n        he.l = lb;\n        he.r = lb.r;\n        lb.r.l = he;\n        lb.r = he;\n      },\n      leftBound: function(p) {\n        var he = EdgeList.leftEnd;\n        do {\n          he = he.r;\n        } while (he != EdgeList.rightEnd && Geom.rightOf(he, p));\n        he = he.l;\n        return he;\n      },\n      del: function(he) {\n        he.l.r = he.r;\n        he.r.l = he.l;\n        he.edge = null;\n      },\n      right: function(he) {\n        return he.r;\n      },\n      left: function(he) {\n        return he.l;\n      },\n      leftRegion: function(he) {\n        return he.edge == null ? Sites.bottomSite : he.edge.region[he.side];\n      },\n      rightRegion: function(he) {\n        return he.edge == null ? Sites.bottomSite : he.edge.region[d3_voronoi_opposite[he.side]];\n      }\n    };\n    var Geom = {\n      bisect: function(s1, s2) {\n        var newEdge = {\n          region: {\n            l: s1,\n            r: s2\n          },\n          ep: {\n            l: null,\n            r: null\n          }\n        };\n        var dx = s2.x - s1.x, dy = s2.y - s1.y, adx = dx > 0 ? dx : -dx, ady = dy > 0 ? dy : -dy;\n        newEdge.c = s1.x * dx + s1.y * dy + (dx * dx + dy * dy) * .5;\n        if (adx > ady) {\n          newEdge.a = 1;\n          newEdge.b = dy / dx;\n          newEdge.c /= dx;\n        } else {\n          newEdge.b = 1;\n          newEdge.a = dx / dy;\n          newEdge.c /= dy;\n        }\n        return newEdge;\n      },\n      intersect: function(el1, el2) {\n        var e1 = el1.edge, e2 = el2.edge;\n        if (!e1 || !e2 || e1.region.r == e2.region.r) {\n          return null;\n        }\n        var d = e1.a * e2.b - e1.b * e2.a;\n        if (Math.abs(d) < 1e-10) {\n          return null;\n        }\n        var xint = (e1.c * e2.b - e2.c * e1.b) / d, yint = (e2.c * e1.a - e1.c * e2.a) / d, e1r = e1.region.r, e2r = e2.region.r, el, e;\n        if (e1r.y < e2r.y || e1r.y == e2r.y && e1r.x < e2r.x) {\n          el = el1;\n          e = e1;\n        } else {\n          el = el2;\n          e = e2;\n        }\n        var rightOfSite = xint >= e.region.r.x;\n        if (rightOfSite && el.side === \"l\" || !rightOfSite && el.side === \"r\") {\n          return null;\n        }\n        return {\n          x: xint,\n          y: yint\n        };\n      },\n      rightOf: function(he, p) {\n        var e = he.edge, topsite = e.region.r, rightOfSite = p.x > topsite.x;\n        if (rightOfSite && he.side === \"l\") {\n          return 1;\n        }\n        if (!rightOfSite && he.side === \"r\") {\n          return 0;\n        }\n        if (e.a === 1) {\n          var dyp = p.y - topsite.y, dxp = p.x - topsite.x, fast = 0, above = 0;\n          if (!rightOfSite && e.b < 0 || rightOfSite && e.b >= 0) {\n            above = fast = dyp >= e.b * dxp;\n          } else {\n            above = p.x + p.y * e.b > e.c;\n            if (e.b < 0) {\n              above = !above;\n            }\n            if (!above) {\n              fast = 1;\n            }\n          }\n          if (!fast) {\n            var dxs = topsite.x - e.region.l.x;\n            above = e.b * (dxp * dxp - dyp * dyp) < dxs * dyp * (1 + 2 * dxp / dxs + e.b * e.b);\n            if (e.b < 0) {\n              above = !above;\n            }\n          }\n        } else {\n          var yl = e.c - e.a * p.x, t1 = p.y - yl, t2 = p.x - topsite.x, t3 = yl - topsite.y;\n          above = t1 * t1 > t2 * t2 + t3 * t3;\n        }\n        return he.side === \"l\" ? above : !above;\n      },\n      endPoint: function(edge, side, site) {\n        edge.ep[side] = site;\n        if (!edge.ep[d3_voronoi_opposite[side]]) return;\n        callback(edge);\n      },\n      distance: function(s, t) {\n        var dx = s.x - t.x, dy = s.y - t.y;\n        return Math.sqrt(dx * dx + dy * dy);\n      }\n    };\n    var EventQueue = {\n      list: [],\n      insert: function(he, site, offset) {\n        he.vertex = site;\n        he.ystar = site.y + offset;\n        for (var i = 0, list = EventQueue.list, l = list.length; i < l; i++) {\n          var next = list[i];\n          if (he.ystar > next.ystar || he.ystar == next.ystar && site.x > next.vertex.x) {\n            continue;\n          } else {\n            break;\n          }\n        }\n        list.splice(i, 0, he);\n      },\n      del: function(he) {\n        for (var i = 0, ls = EventQueue.list, l = ls.length; i < l && ls[i] != he; ++i) {}\n        ls.splice(i, 1);\n      },\n      empty: function() {\n        return EventQueue.list.length === 0;\n      },\n      nextEvent: function(he) {\n        for (var i = 0, ls = EventQueue.list, l = ls.length; i < l; ++i) {\n          if (ls[i] == he) return ls[i + 1];\n        }\n        return null;\n      },\n      min: function() {\n        var elem = EventQueue.list[0];\n        return {\n          x: elem.vertex.x,\n          y: elem.ystar\n        };\n      },\n      extractMin: function() {\n        return EventQueue.list.shift();\n      }\n    };\n    EdgeList.init();\n    Sites.bottomSite = Sites.list.shift();\n    var newSite = Sites.list.shift(), newIntStar;\n    var lbnd, rbnd, llbnd, rrbnd, bisector;\n    var bot, top, temp, p, v;\n    var e, pm;\n    while (true) {\n      if (!EventQueue.empty()) {\n        newIntStar = EventQueue.min();\n      }\n      if (newSite && (EventQueue.empty() || newSite.y < newIntStar.y || newSite.y == newIntStar.y && newSite.x < newIntStar.x)) {\n        lbnd = EdgeList.leftBound(newSite);\n        rbnd = EdgeList.right(lbnd);\n        bot = EdgeList.rightRegion(lbnd);\n        e = Geom.bisect(bot, newSite);\n        bisector = EdgeList.createHalfEdge(e, \"l\");\n        EdgeList.insert(lbnd, bisector);\n        p = Geom.intersect(lbnd, bisector);\n        if (p) {\n          EventQueue.del(lbnd);\n          EventQueue.insert(lbnd, p, Geom.distance(p, newSite));\n        }\n        lbnd = bisector;\n        bisector = EdgeList.createHalfEdge(e, \"r\");\n        EdgeList.insert(lbnd, bisector);\n        p = Geom.intersect(bisector, rbnd);\n        if (p) {\n          EventQueue.insert(bisector, p, Geom.distance(p, newSite));\n        }\n        newSite = Sites.list.shift();\n      } else if (!EventQueue.empty()) {\n        lbnd = EventQueue.extractMin();\n        llbnd = EdgeList.left(lbnd);\n        rbnd = EdgeList.right(lbnd);\n        rrbnd = EdgeList.right(rbnd);\n        bot = EdgeList.leftRegion(lbnd);\n        top = EdgeList.rightRegion(rbnd);\n        v = lbnd.vertex;\n        Geom.endPoint(lbnd.edge, lbnd.side, v);\n        Geom.endPoint(rbnd.edge, rbnd.side, v);\n        EdgeList.del(lbnd);\n        EventQueue.del(rbnd);\n        EdgeList.del(rbnd);\n        pm = \"l\";\n        if (bot.y > top.y) {\n          temp = bot;\n          bot = top;\n          top = temp;\n          pm = \"r\";\n        }\n        e = Geom.bisect(bot, top);\n        bisector = EdgeList.createHalfEdge(e, pm);\n        EdgeList.insert(llbnd, bisector);\n        Geom.endPoint(e, d3_voronoi_opposite[pm], v);\n        p = Geom.intersect(llbnd, bisector);\n        if (p) {\n          EventQueue.del(llbnd);\n          EventQueue.insert(llbnd, p, Geom.distance(p, bot));\n        }\n        p = Geom.intersect(bisector, rrbnd);\n        if (p) {\n          EventQueue.insert(bisector, p, Geom.distance(p, bot));\n        }\n      } else {\n        break;\n      }\n    }\n    for (lbnd = EdgeList.right(EdgeList.leftEnd); lbnd != EdgeList.rightEnd; lbnd = EdgeList.right(lbnd)) {\n      callback(lbnd.edge);\n    }\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreePoint(p) {\n    return {\n      x: p[0],\n      y: p[1]\n    };\n  }\n  function d3_time_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  function d3_time_formatAbbreviate(name) {\n    return name.substring(0, 3);\n  }\n  function d3_time_parse(date, template, string, j) {\n    var c, p, i = 0, n = template.length, m = string.length;\n    while (i < n) {\n      if (j >= m) return -1;\n      c = template.charCodeAt(i++);\n      if (c == 37) {\n        p = d3_time_parsers[template.charAt(i++)];\n        if (!p || (j = p(date, string, j)) < 0) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n    return j;\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map, i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayAbbrev(date, string, i) {\n    d3_time_dayAbbrevRe.lastIndex = 0;\n    var n = d3_time_dayAbbrevRe.exec(string.substring(i));\n    return n ? i += n[0].length : -1;\n  }\n  function d3_time_parseWeekday(date, string, i) {\n    d3_time_dayRe.lastIndex = 0;\n    var n = d3_time_dayRe.exec(string.substring(i));\n    return n ? i += n[0].length : -1;\n  }\n  function d3_time_parseMonthAbbrev(date, string, i) {\n    d3_time_monthAbbrevRe.lastIndex = 0;\n    var n = d3_time_monthAbbrevRe.exec(string.substring(i));\n    return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i += n[0].length) : -1;\n  }\n  function d3_time_parseMonth(date, string, i) {\n    d3_time_monthRe.lastIndex = 0;\n    var n = d3_time_monthRe.exec(string.substring(i));\n    return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i += n[0].length) : -1;\n  }\n  function d3_time_parseLocaleFull(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n  }\n  function d3_time_parseLocaleDate(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n  }\n  function d3_time_parseLocaleTime(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 4));\n    return n ? (date.y = +n[0], i += n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i += n[0].length) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.m = n[0] - 1, i += n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.d = +n[0], i += n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.H = +n[0], i += n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.M = +n[0], i += n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.S = +n[0], i += n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n    return n ? (date.L = +n[0], i += n[0].length) : -1;\n  }\n  function d3_time_parseAmPm(date, string, i) {\n    var n = d3_time_amPmLookup.get(string.substring(i, i += 2).toLowerCase());\n    return n == null ? -1 : (date.p = n, i);\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = ~~(Math.abs(z) / 60), zm = Math.abs(z) % 60;\n    return zs + d3_time_zfill2(zh) + d3_time_zfill2(zm);\n  }\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_time(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_time(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_time = d3_time_utc;\n        var utc = new d3_time_utc;\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_time = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_time = d3_time_utc;\n        var utc = new d3_time_utc;\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_time = Date;\n      }\n    };\n  }\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_nice(scale.domain(), function() {\n        return m;\n      }));\n    };\n    scale.ticks = function(m, k) {\n      var extent = d3_time_scaleExtent(scale.domain());\n      if (typeof m !== \"function\") {\n        var span = extent[1] - extent[0], target = span / m, i = d3.bisect(d3_time_scaleSteps, target);\n        if (i == d3_time_scaleSteps.length) return methods.year(extent, m);\n        if (!i) return linear.ticks(m).map(d3_time_scaleDate);\n        if (Math.log(target / d3_time_scaleSteps[i - 1]) < Math.log(d3_time_scaleSteps[i] / target)) --i;\n        m = methods[i];\n        k = m[1];\n        m = m[0].range;\n      }\n      return m(extent[0], new Date(+extent[1] + 1), k);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_time_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  function d3_time_scaleFormat(formats) {\n    return function(date) {\n      var i = formats.length - 1, f = formats[i];\n      while (!f[1](date)) f = formats[--i];\n      return f[0](date);\n    };\n  }\n  function d3_time_scaleSetYear(y) {\n    var d = new Date(y, 0, 1);\n    d.setFullYear(y);\n    return d;\n  }\n  function d3_time_scaleGetYear(d) {\n    var y = d.getFullYear(), d0 = d3_time_scaleSetYear(y), d1 = d3_time_scaleSetYear(y + 1);\n    return y + (d - d0) / (d1 - d0);\n  }\n  function d3_time_scaleUTCSetYear(y) {\n    var d = new Date(Date.UTC(y, 0, 1));\n    d.setUTCFullYear(y);\n    return d;\n  }\n  function d3_time_scaleUTCGetYear(d) {\n    var y = d.getUTCFullYear(), d0 = d3_time_scaleUTCSetYear(y), d1 = d3_time_scaleUTCSetYear(y + 1);\n    return y + (d - d0) / (d1 - d0);\n  }\n  if (!Date.now) Date.now = function() {\n    return +(new Date);\n  };\n  try {\n    document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n  } catch (error) {\n    var d3_style_prototype = CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n    d3_style_prototype.setProperty = function(name, value, priority) {\n      d3_style_setProperty.call(this, name, value + \"\", priority);\n    };\n  }\n  d3 = {\n    version: \"2.10.3\"\n  };\n  var d3_array = d3_arraySlice;\n  try {\n    d3_array(document.documentElement.childNodes)[0].nodeType;\n  } catch (e) {\n    d3_array = d3_arrayCopy;\n  }\n  var d3_arraySubclass = [].__proto__ ? function(array, prototype) {\n    array.__proto__ = prototype;\n  } : function(array, prototype) {\n    for (var property in prototype) array[property] = prototype[property];\n  };\n  d3.map = function(object) {\n    var map = new d3_Map;\n    for (var key in object) map.set(key, object[key]);\n    return map;\n  };\n  d3_class(d3_Map, {\n    has: function(key) {\n      return d3_map_prefix + key in this;\n    },\n    get: function(key) {\n      return this[d3_map_prefix + key];\n    },\n    set: function(key, value) {\n      return this[d3_map_prefix + key] = value;\n    },\n    remove: function(key) {\n      key = d3_map_prefix + key;\n      return key in this && delete this[key];\n    },\n    keys: function() {\n      var keys = [];\n      this.forEach(function(key) {\n        keys.push(key);\n      });\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      this.forEach(function(key, value) {\n        values.push(value);\n      });\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      this.forEach(function(key, value) {\n        entries.push({\n          key: key,\n          value: value\n        });\n      });\n      return entries;\n    },\n    forEach: function(f) {\n      for (var key in this) {\n        if (key.charCodeAt(0) === d3_map_prefixCode) {\n          f.call(this, key.substring(1), this[key]);\n        }\n      }\n    }\n  });\n  var d3_map_prefix = \"\\0\", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);\n  d3.functor = d3_functor;\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  d3.ascending = function(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  };\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.mean = function(array, f) {\n    var n = array.length, a, m = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_number(a = array[i])) m += (a - m) / ++j;\n    } else {\n      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) m += (a - m) / ++j;\n    }\n    return j ? m : undefined;\n  };\n  d3.median = function(array, f) {\n    if (arguments.length > 1) array = array.map(f);\n    array = array.filter(d3_number);\n    return array.length ? d3.quantile(array.sort(d3.ascending), .5) : undefined;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n && ((a = array[i]) == null || a != a)) a = undefined;\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n && ((a = f.call(array, array[i], i)) == null || a != a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n && ((a = array[i]) == null || a != a)) a = undefined;\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n && ((a = f.call(array, array[i], i)) == null || a != a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n && ((a = c = array[i]) == null || a != a)) a = c = undefined;\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n && ((a = c = f.call(array, array[i], i)) == null || a != a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      var random = d3.random.normal();\n      return function() {\n        return Math.exp(µ + σ * random());\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s / m;\n      };\n    }\n  };\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (!isNaN(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  d3.bisector = function(f) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  };\n  var d3_bisector = d3.bisector(function(d) {\n    return d;\n  });\n  d3.bisectLeft = d3_bisector.left;\n  d3.bisect = d3.bisectRight = d3_bisector.right;\n  d3.first = function(array, f) {\n    var i = 0, n = array.length, a = array[0], b;\n    if (arguments.length === 1) f = d3.ascending;\n    while (++i < n) {\n      if (f.call(array, a, b = array[i]) > 0) {\n        a = b;\n      }\n    }\n    return a;\n  };\n  d3.last = function(array, f) {\n    var i = 0, n = array.length, a = array[0], b;\n    if (arguments.length === 1) f = d3.ascending;\n    while (++i < n) {\n      if (f.call(array, a, b = array[i]) <= 0) {\n        a = b;\n      }\n    }\n    return a;\n  };\n  d3.nest = function() {\n    function map(array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, valuesByKey = new d3_Map, values, o = {};\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      valuesByKey.forEach(function(keyValue, values) {\n        o[keyValue] = map(values, depth);\n      });\n      return o;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var a = [], sortKey = sortKeys[depth++], key;\n      for (key in map) {\n        a.push({\n          key: key,\n          values: entries(map[key], depth)\n        });\n      }\n      if (sortKey) a.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      });\n      return a;\n    }\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    nest.map = function(array) {\n      return map(array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.permute = function(array, indexes) {\n    var permutes = [], i = -1, n = indexes.length;\n    while (++i < n) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.merge = function(arrays) {\n    return Array.prototype.concat.apply([], arrays);\n  };\n  d3.split = function(array, f) {\n    var arrays = [], values = [], value, i = -1, n = array.length;\n    if (arguments.length < 2) f = d3_splitter;\n    while (++i < n) {\n      if (f.call(values, value = array[i], i)) {\n        values = [];\n      } else {\n        if (!values.length) arrays.push(values);\n        values.push(value);\n      }\n    }\n    return arrays;\n  };\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(Math.abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  d3.xhr = function(url, mime, callback) {\n    var req = new XMLHttpRequest;\n    if (arguments.length < 3) callback = mime, mime = null; else if (mime && req.overrideMimeType) req.overrideMimeType(mime);\n    req.open(\"GET\", url, true);\n    if (mime) req.setRequestHeader(\"Accept\", mime);\n    req.onreadystatechange = function() {\n      if (req.readyState === 4) {\n        var s = req.status;\n        callback(!s && req.response || s >= 200 && s < 300 || s === 304 ? req : null);\n      }\n    };\n    req.send(null);\n  };\n  d3.text = function(url, mime, callback) {\n    function ready(req) {\n      callback(req && req.responseText);\n    }\n    if (arguments.length < 3) {\n      callback = mime;\n      mime = null;\n    }\n    d3.xhr(url, mime, ready);\n  };\n  d3.json = function(url, callback) {\n    d3.text(url, \"application/json\", function(text) {\n      callback(text ? JSON.parse(text) : null);\n    });\n  };\n  d3.html = function(url, callback) {\n    d3.text(url, \"text/html\", function(text) {\n      if (text != null) {\n        var range = document.createRange();\n        range.selectNode(document.body);\n        text = range.createContextualFragment(text);\n      }\n      callback(text);\n    });\n  };\n  d3.xml = function(url, mime, callback) {\n    function ready(req) {\n      callback(req && req.responseXML);\n    }\n    if (arguments.length < 3) {\n      callback = mime;\n      mime = null;\n    }\n    d3.xhr(url, mime, ready);\n  };\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.substring(0, i);\n        name = name.substring(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch, i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i > 0) {\n      name = type.substring(i + 1);\n      type = type.substring(0, i);\n    }\n    return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n  };\n  d3.format = function(specifier) {\n    var match = d3_format_re.exec(specifier), fill = match[1] || \" \", sign = match[3] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, suffix = \"\", integer = false;\n    if (precision) precision = +precision.substring(1);\n    if (zfill) {\n      fill = \"0\";\n      if (comma) width -= Math.floor((width - 1) / 4);\n    }\n    switch (type) {\n     case \"n\":\n      comma = true;\n      type = \"g\";\n      break;\n     case \"%\":\n      scale = 100;\n      suffix = \"%\";\n      type = \"f\";\n      break;\n     case \"p\":\n      scale = 100;\n      suffix = \"%\";\n      type = \"r\";\n      break;\n     case \"d\":\n      integer = true;\n      precision = 0;\n      break;\n     case \"s\":\n      scale = -1;\n      type = \"r\";\n      break;\n    }\n    if (type == \"r\" && !precision) type = \"g\";\n    type = d3_format_types.get(type) || d3_format_typeDefault;\n    return function(value) {\n      if (integer && value % 1) return \"\";\n      var negative = value < 0 && (value = -value) ? \"-\" : sign;\n      if (scale < 0) {\n        var prefix = d3.formatPrefix(value, precision);\n        value = prefix.scale(value);\n        suffix = prefix.symbol;\n      } else {\n        value *= scale;\n      }\n      value = type(value, precision);\n      if (zfill) {\n        var length = value.length + negative.length;\n        if (length < width) value = (new Array(width - length + 1)).join(fill) + value;\n        if (comma) value = d3_format_group(value);\n        value = negative + value;\n      } else {\n        if (comma) value = d3_format_group(value);\n        value = negative + value;\n        var length = value.length;\n        if (length < width) value = (new Array(width - length + 1)).join(fill) + value;\n      }\n      return value + suffix;\n    };\n  };\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?(#)?(0)?([0-9]+)?(,)?(\\.[0-9]+)?([a-zA-Z%])?/;\n  var d3_format_types = d3.map({\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return d3.round(x, p = d3_format_precision(x, p)).toFixed(Math.max(0, Math.min(20, p)));\n    }\n  });\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"μ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i <= 0 ? i + 1 : i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  var d3_ease_quad = d3_ease_poly(2), d3_ease_cubic = d3_ease_poly(3), d3_ease_default = function() {\n    return d3_ease_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_ease_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_ease_identity;\n    return d3_ease_clamp(m(t.apply(null, Array.prototype.slice.call(arguments, 1))));\n  };\n  d3.event = null;\n  d3.transform = function(string) {\n    var g = document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      g.setAttribute(\"transform\", string);\n      var t = g.transform.baseVal.consolidate();\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  var d3_transformDegrees = 180 / Math.PI, d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolate = function(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  };\n  d3.interpolateNumber = function(a, b) {\n    b -= a;\n    return function(t) {\n      return a + b * t;\n    };\n  };\n  d3.interpolateRound = function(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  };\n  d3.interpolateString = function(a, b) {\n    var m, i, j, s0 = 0, s1 = 0, s = [], q = [], n, o;\n    d3_interpolate_number.lastIndex = 0;\n    for (i = 0; m = d3_interpolate_number.exec(b); ++i) {\n      if (m.index) s.push(b.substring(s0, s1 = m.index));\n      q.push({\n        i: s.length,\n        x: m[0]\n      });\n      s.push(null);\n      s0 = d3_interpolate_number.lastIndex;\n    }\n    if (s0 < b.length) s.push(b.substring(s0));\n    for (i = 0, n = q.length; (m = d3_interpolate_number.exec(a)) && i < n; ++i) {\n      o = q[i];\n      if (o.x == m[0]) {\n        if (o.i) {\n          if (s[o.i + 1] == null) {\n            s[o.i - 1] += o.x;\n            s.splice(o.i, 1);\n            for (j = i + 1; j < n; ++j) q[j].i--;\n          } else {\n            s[o.i - 1] += o.x + s[o.i + 1];\n            s.splice(o.i, 2);\n            for (j = i + 1; j < n; ++j) q[j].i -= 2;\n          }\n        } else {\n          if (s[o.i + 1] == null) {\n            s[o.i] = o.x;\n          } else {\n            s[o.i] = o.x + s[o.i + 1];\n            s.splice(o.i + 1, 1);\n            for (j = i + 1; j < n; ++j) q[j].i--;\n          }\n        }\n        q.splice(i, 1);\n        n--;\n        i--;\n      } else {\n        o.x = d3.interpolateNumber(parseFloat(m[0]), parseFloat(o.x));\n      }\n    }\n    while (i < n) {\n      o = q.pop();\n      if (s[o.i + 1] == null) {\n        s[o.i] = o.x;\n      } else {\n        s[o.i] = o.x + s[o.i + 1];\n        s.splice(o.i + 1, 1);\n      }\n      n--;\n    }\n    if (s.length === 1) {\n      return s[0] == null ? q[0].x : function() {\n        return b;\n      };\n    }\n    return function(t) {\n      for (i = 0; i < n; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n  d3.interpolateTransform = function(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3.interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3.interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3.interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3.interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3.interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3.interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n  d3.interpolateRgb = function(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  };\n  d3.interpolateHsl = function(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var h0 = a.h, s0 = a.s, l0 = a.l, h1 = b.h - h0, s1 = b.s - s0, l1 = b.l - l0;\n    if (h1 > 180) h1 -= 360; else if (h1 < -180) h1 += 360;\n    return function(t) {\n      return d3_hsl_rgb(h0 + h1 * t, s0 + s1 * t, l0 + l1 * t) + \"\";\n    };\n  };\n  d3.interpolateLab = function(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  };\n  d3.interpolateHcl = function(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  };\n  d3.interpolateArray = function(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3.interpolate(a[i], b[i]));\n    for (; i < na; ++i) c[i] = a[i];\n    for (; i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  };\n  d3.interpolateObject = function(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolateByName(k)(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  };\n  var d3_interpolate_number = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n  d3.interpolators = [ d3.interpolateObject, function(a, b) {\n    return b instanceof Array && d3.interpolateArray(a, b);\n  }, function(a, b) {\n    return (typeof a === \"string\" || typeof b === \"string\") && d3.interpolateString(a + \"\", b + \"\");\n  }, function(a, b) {\n    return (typeof b === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) : b instanceof d3_Color) && d3.interpolateRgb(a, b);\n  }, function(a, b) {\n    return !isNaN(a = +a) && !isNaN(b = +b) && d3.interpolateNumber(a, b);\n  } ];\n  d3_Color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.rgb = function(r, g, b) {\n    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);\n  };\n  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color;\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return d3_rgb(Math.min(255, Math.floor(r / k)), Math.min(255, Math.floor(g / k)), Math.min(255, Math.floor(b / k)));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_rgb(Math.floor(k * this.r), Math.floor(k * this.g), Math.floor(k * this.b));\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  var d3_rgb_names = d3.map({\n    aliceblue: \"#f0f8ff\",\n    antiquewhite: \"#faebd7\",\n    aqua: \"#00ffff\",\n    aquamarine: \"#7fffd4\",\n    azure: \"#f0ffff\",\n    beige: \"#f5f5dc\",\n    bisque: \"#ffe4c4\",\n    black: \"#000000\",\n    blanchedalmond: \"#ffebcd\",\n    blue: \"#0000ff\",\n    blueviolet: \"#8a2be2\",\n    brown: \"#a52a2a\",\n    burlywood: \"#deb887\",\n    cadetblue: \"#5f9ea0\",\n    chartreuse: \"#7fff00\",\n    chocolate: \"#d2691e\",\n    coral: \"#ff7f50\",\n    cornflowerblue: \"#6495ed\",\n    cornsilk: \"#fff8dc\",\n    crimson: \"#dc143c\",\n    cyan: \"#00ffff\",\n    darkblue: \"#00008b\",\n    darkcyan: \"#008b8b\",\n    darkgoldenrod: \"#b8860b\",\n    darkgray: \"#a9a9a9\",\n    darkgreen: \"#006400\",\n    darkgrey: \"#a9a9a9\",\n    darkkhaki: \"#bdb76b\",\n    darkmagenta: \"#8b008b\",\n    darkolivegreen: \"#556b2f\",\n    darkorange: \"#ff8c00\",\n    darkorchid: \"#9932cc\",\n    darkred: \"#8b0000\",\n    darksalmon: \"#e9967a\",\n    darkseagreen: \"#8fbc8f\",\n    darkslateblue: \"#483d8b\",\n    darkslategray: \"#2f4f4f\",\n    darkslategrey: \"#2f4f4f\",\n    darkturquoise: \"#00ced1\",\n    darkviolet: \"#9400d3\",\n    deeppink: \"#ff1493\",\n    deepskyblue: \"#00bfff\",\n    dimgray: \"#696969\",\n    dimgrey: \"#696969\",\n    dodgerblue: \"#1e90ff\",\n    firebrick: \"#b22222\",\n    floralwhite: \"#fffaf0\",\n    forestgreen: \"#228b22\",\n    fuchsia: \"#ff00ff\",\n    gainsboro: \"#dcdcdc\",\n    ghostwhite: \"#f8f8ff\",\n    gold: \"#ffd700\",\n    goldenrod: \"#daa520\",\n    gray: \"#808080\",\n    green: \"#008000\",\n    greenyellow: \"#adff2f\",\n    grey: \"#808080\",\n    honeydew: \"#f0fff0\",\n    hotpink: \"#ff69b4\",\n    indianred: \"#cd5c5c\",\n    indigo: \"#4b0082\",\n    ivory: \"#fffff0\",\n    khaki: \"#f0e68c\",\n    lavender: \"#e6e6fa\",\n    lavenderblush: \"#fff0f5\",\n    lawngreen: \"#7cfc00\",\n    lemonchiffon: \"#fffacd\",\n    lightblue: \"#add8e6\",\n    lightcoral: \"#f08080\",\n    lightcyan: \"#e0ffff\",\n    lightgoldenrodyellow: \"#fafad2\",\n    lightgray: \"#d3d3d3\",\n    lightgreen: \"#90ee90\",\n    lightgrey: \"#d3d3d3\",\n    lightpink: \"#ffb6c1\",\n    lightsalmon: \"#ffa07a\",\n    lightseagreen: \"#20b2aa\",\n    lightskyblue: \"#87cefa\",\n    lightslategray: \"#778899\",\n    lightslategrey: \"#778899\",\n    lightsteelblue: \"#b0c4de\",\n    lightyellow: \"#ffffe0\",\n    lime: \"#00ff00\",\n    limegreen: \"#32cd32\",\n    linen: \"#faf0e6\",\n    magenta: \"#ff00ff\",\n    maroon: \"#800000\",\n    mediumaquamarine: \"#66cdaa\",\n    mediumblue: \"#0000cd\",\n    mediumorchid: \"#ba55d3\",\n    mediumpurple: \"#9370db\",\n    mediumseagreen: \"#3cb371\",\n    mediumslateblue: \"#7b68ee\",\n    mediumspringgreen: \"#00fa9a\",\n    mediumturquoise: \"#48d1cc\",\n    mediumvioletred: \"#c71585\",\n    midnightblue: \"#191970\",\n    mintcream: \"#f5fffa\",\n    mistyrose: \"#ffe4e1\",\n    moccasin: \"#ffe4b5\",\n    navajowhite: \"#ffdead\",\n    navy: \"#000080\",\n    oldlace: \"#fdf5e6\",\n    olive: \"#808000\",\n    olivedrab: \"#6b8e23\",\n    orange: \"#ffa500\",\n    orangered: \"#ff4500\",\n    orchid: \"#da70d6\",\n    palegoldenrod: \"#eee8aa\",\n    palegreen: \"#98fb98\",\n    paleturquoise: \"#afeeee\",\n    palevioletred: \"#db7093\",\n    papayawhip: \"#ffefd5\",\n    peachpuff: \"#ffdab9\",\n    peru: \"#cd853f\",\n    pink: \"#ffc0cb\",\n    plum: \"#dda0dd\",\n    powderblue: \"#b0e0e6\",\n    purple: \"#800080\",\n    red: \"#ff0000\",\n    rosybrown: \"#bc8f8f\",\n    royalblue: \"#4169e1\",\n    saddlebrown: \"#8b4513\",\n    salmon: \"#fa8072\",\n    sandybrown: \"#f4a460\",\n    seagreen: \"#2e8b57\",\n    seashell: \"#fff5ee\",\n    sienna: \"#a0522d\",\n    silver: \"#c0c0c0\",\n    skyblue: \"#87ceeb\",\n    slateblue: \"#6a5acd\",\n    slategray: \"#708090\",\n    slategrey: \"#708090\",\n    snow: \"#fffafa\",\n    springgreen: \"#00ff7f\",\n    steelblue: \"#4682b4\",\n    tan: \"#d2b48c\",\n    teal: \"#008080\",\n    thistle: \"#d8bfd8\",\n    tomato: \"#ff6347\",\n    turquoise: \"#40e0d0\",\n    violet: \"#ee82ee\",\n    wheat: \"#f5deb3\",\n    white: \"#ffffff\",\n    whitesmoke: \"#f5f5f5\",\n    yellow: \"#ffff00\",\n    yellowgreen: \"#9acd32\"\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgb_parse(value, d3_rgb, d3_hsl_rgb));\n  });\n  d3.hsl = function(h, s, l) {\n    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);\n  };\n  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color;\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  d3.hcl = function(h, c, l) {\n    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);\n  };\n  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color;\n  d3_hclPrototype.brighter = function(k) {\n    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  d3.lab = function(l, a, b) {\n    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);\n  };\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_Lab.prototype = new d3_Color;\n  d3_labPrototype.brighter = function(k) {\n    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectRoot = document.documentElement, d3_selectMatcher = d3_selectRoot.matchesSelector || d3_selectRoot.webkitMatchesSelector || d3_selectRoot.mozMatchesSelector || d3_selectRoot.msMatchesSelector || d3_selectRoot.oMatchesSelector, d3_selectMatches = function(n, s) {\n    return d3_selectMatcher.call(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = function(s, n) {\n      return Sizzle.uniqueSort(Sizzle(s, n));\n    };\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  var d3_selectionPrototype = [];\n  d3.selection = function() {\n    return d3_selectionRoot;\n  };\n  d3.selection.prototype = d3_selectionPrototype;\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    if (typeof selector !== \"function\") selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    if (typeof selector !== \"function\") selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = name.trim().split(/^|\\s+/g)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.className;\n          if (value.baseVal != null) value = value.baseVal;\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) return window.getComputedStyle(this.node(), null).getPropertyValue(name);\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length < 1 ? this.node().textContent : this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    });\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length < 1 ? this.node().innerHTML : this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    });\n  };\n  d3_selectionPrototype.append = function(name) {\n    function append() {\n      return this.appendChild(document.createElementNS(this.namespaceURI, name));\n    }\n    function appendNS() {\n      return this.appendChild(document.createElementNS(name.space, name.local));\n    }\n    name = d3.ns.qualify(name);\n    return this.select(name.local ? appendNS : append);\n  };\n  d3_selectionPrototype.insert = function(name, before) {\n    function insert() {\n      return this.insertBefore(document.createElementNS(this.namespaceURI, name), d3_select(before, this));\n    }\n    function insertNS() {\n      return this.insertBefore(document.createElementNS(name.space, name.local), d3_select(before, this));\n    }\n    name = d3.ns.qualify(name);\n    return this.select(name.local ? insertNS : insert);\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(function() {\n      var parent = this.parentNode;\n      if (parent) parent.removeChild(this);\n    });\n  };\n  d3_selectionPrototype.data = function(value, key) {\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), n1 = Math.max(n, m), updateNodes = [], enterNodes = [], exitNodes = [], node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map, keyValues = [], keyValue, j = groupData.length;\n        for (i = -1; ++i < n; ) {\n          keyValue = key.call(node = group[i], node.__data__, i);\n          if (nodeByKeyValue.has(keyValue)) {\n            exitNodes[j++] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues.push(keyValue);\n        }\n        for (i = -1; ++i < m; ) {\n          keyValue = key.call(groupData, nodeData = groupData[i], i);\n          if (nodeByKeyValue.has(keyValue)) {\n            updateNodes[i] = node = nodeByKeyValue.get(keyValue);\n            node.__data__ = nodeData;\n            enterNodes[i] = exitNodes[i] = null;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n            updateNodes[i] = exitNodes[i] = null;\n          }\n          nodeByKeyValue.remove(keyValue);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValues[i])) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n            enterNodes[i] = exitNodes[i] = null;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n            updateNodes[i] = exitNodes[i] = null;\n          }\n        }\n        for (; i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n          updateNodes[i] = exitNodes[i] = null;\n        }\n        for (; i < n1; ++i) {\n          exitNodes[i] = group[i];\n          enterNodes[i] = updateNodes[i] = null;\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  d3_selectionPrototype.datum = d3_selectionPrototype.map = function(value) {\n    return arguments.length < 1 ? this.property(\"__data__\") : this.property(\"__data__\", value);\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  d3_selectionPrototype.call = function(callback) {\n    callback.apply(this, (arguments[0] = this, arguments));\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function(callback) {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.transition = function() {\n    var subgroups = [], subgroup, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        subgroup.push((node = group[i]) ? {\n          node: node,\n          delay: d3_transitionDelay,\n          duration: d3_transitionDuration\n        } : null);\n      }\n    }\n    return d3_transition(subgroups, d3_transitionId || ++d3_transitionNextId, Date.now());\n  };\n  var d3_selectionRoot = d3_selection([ [ document ] ]);\n  d3_selectionRoot[0].parentNode = d3_selectRoot;\n  d3.select = function(selector) {\n    return typeof selector === \"string\" ? d3_selectionRoot.select(selector) : d3_selection([ [ selector ] ]);\n  };\n  d3.selectAll = function(selector) {\n    return typeof selector === \"string\" ? d3_selectionRoot.selectAll(selector) : d3_selection([ d3_array(selector) ]);\n  };\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.insert = d3_selectionPrototype.insert;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  var d3_transitionPrototype = [], d3_transitionNextId = 0, d3_transitionId = 0, d3_transitionDefaultDelay = 0, d3_transitionDefaultDuration = 250, d3_transitionDefaultEase = d3.ease(\"cubic-in-out\"), d3_transitionDelay = d3_transitionDefaultDelay, d3_transitionDuration = d3_transitionDefaultDuration, d3_transitionEase = d3_transitionDefaultEase;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3.transition = function(selection) {\n    return arguments.length ? d3_transitionId ? selection.transition() : selection : d3_selectionRoot.transition();\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, node;\n    if (typeof selector !== \"function\") selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node.node, node.node.__data__, i))) {\n          if (\"__data__\" in node.node) subnode.__data__ = node.node.__data__;\n          subgroup.push({\n            node: subnode,\n            delay: node.delay,\n            duration: node.duration\n          });\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.id, this.time).ease(this.ease());\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, subnodes, node;\n    if (typeof selector !== \"function\") selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subnodes = selector.call(node.node, node.node.__data__, i);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            subgroup.push({\n              node: subnodes[k],\n              delay: node.delay,\n              duration: node.duration\n            });\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, this.id, this.time).ease(this.ease());\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node.node, node.node.__data__, i)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.id, this.time).ease(this.ease());\n  };\n  d3_transitionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      for (value in name) this.attrTween(value, d3_tweenByName(name[value], value));\n      return this;\n    }\n    return this.attrTween(name, d3_tweenByName(value, name));\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f === d3_tweenRemove ? (this.removeAttribute(name), null) : f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f === d3_tweenRemove ? (this.removeAttributeNS(name.space, name.local), null) : f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    var name = d3.ns.qualify(nameNS);\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.styleTween(priority, d3_tweenByName(name[priority], priority), value);\n        return this;\n      }\n      priority = \"\";\n    }\n    return this.styleTween(name, d3_tweenByName(value, name), priority);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    return this.tween(\"style.\" + name, function(d, i) {\n      var f = tween.call(this, d, i, window.getComputedStyle(this, null).getPropertyValue(name));\n      return f === d3_tweenRemove ? (this.style.removeProperty(name), null) : f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    });\n  };\n  d3_transitionPrototype.text = function(value) {\n    return this.tween(\"text\", function(d, i) {\n      this.textContent = typeof value === \"function\" ? value.call(this, d, i) : value;\n    });\n  };\n  d3_transitionPrototype.remove = function() {\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (!this.__transition__ && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node.delay = value.call(node = node.node, node.__data__, i, j) | 0;\n    } : (value = value | 0, function(node) {\n      node.delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node.duration = Math.max(1, value.call(node = node.node, node.__data__, i, j) | 0);\n    } : (value = Math.max(1, value | 0), function(node) {\n      node.duration = value;\n    }));\n  };\n  d3_transitionPrototype.transition = function() {\n    return this.select(d3_this);\n  };\n  d3.tween = function(b, interpolate) {\n    function tweenFunction(d, i, a) {\n      var v = b.call(this, d, i);\n      return v == null ? a != \"\" && d3_tweenRemove : a != v && interpolate(a, v + \"\");\n    }\n    function tweenString(d, i, a) {\n      return a != b && interpolate(a, b);\n    }\n    return typeof b === \"function\" ? tweenFunction : b == null ? d3_tweenNull : (b += \"\", tweenString);\n  };\n  var d3_tweenRemove = {};\n  var d3_timer_id = 0, d3_timer_byId = {}, d3_timer_queue = null, d3_timer_interval, d3_timer_timeout;\n  d3.timer = function(callback, delay, then) {\n    if (arguments.length < 3) {\n      if (arguments.length < 2) delay = 0; else if (!isFinite(delay)) return;\n      then = Date.now();\n    }\n    var timer = d3_timer_byId[callback.id];\n    if (timer && timer.callback === callback) {\n      timer.then = then;\n      timer.delay = delay;\n    } else d3_timer_byId[callback.id = ++d3_timer_id] = d3_timer_queue = {\n      callback: callback,\n      then: then,\n      delay: delay,\n      next: d3_timer_queue\n    };\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  d3.timer.flush = function() {\n    var elapsed, now = Date.now(), t1 = d3_timer_queue;\n    while (t1) {\n      elapsed = now - t1.then;\n      if (!t1.delay) t1.flush = t1.callback(elapsed);\n      t1 = t1.next;\n    }\n    d3_timer_flush();\n  };\n  var d3_timer_frame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = /WebKit/.test(navigator.userAgent) ? -1 : 0;\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  d3.scale = {};\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3.interpolate, false);\n  };\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear(), d3_scale_logp);\n  };\n  var d3_scale_logFormat = d3.format(\".0e\");\n  d3_scale_logp.pow = function(x) {\n    return Math.pow(10, x);\n  };\n  d3_scale_logn.pow = function(x) {\n    return -Math.pow(10, -x);\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1);\n  };\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ \"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\" ];\n  var d3_category20 = [ \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\" ];\n  var d3_category20b = [ \"#393b79\", \"#5254a3\", \"#6b6ecf\", \"#9c9ede\", \"#637939\", \"#8ca252\", \"#b5cf6b\", \"#cedb9c\", \"#8c6d31\", \"#bd9e39\", \"#e7ba52\", \"#e7cb94\", \"#843c39\", \"#ad494a\", \"#d6616b\", \"#e7969c\", \"#7b4173\", \"#a55194\", \"#ce6dbd\", \"#de9ed6\" ];\n  var d3_category20c = [ \"#3182bd\", \"#6baed6\", \"#9ecae1\", \"#c6dbef\", \"#e6550d\", \"#fd8d3c\", \"#fdae6b\", \"#fdd0a2\", \"#31a354\", \"#74c476\", \"#a1d99b\", \"#c7e9c0\", \"#756bb1\", \"#9e9ac8\", \"#bcbddc\", \"#dadaeb\", \"#636363\", \"#969696\", \"#bdbdbd\", \"#d9d9d9\" ];\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  d3.svg = {};\n  d3.svg.arc = function() {\n    function arc() {\n      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, a0 = a1, a1 = da), a1 - a0), df = da < Math.PI ? \"0\" : \"1\", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);\n      return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n    }\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcOffset = -Math.PI / 2, d3_svg_arcMax = 2 * Math.PI - 1e-6;\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > Math.PI) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    var source = d3_svg_chordSource, target = d3_svg_chordTarget, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  d3.svg.diagonal = function() {\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    var source = d3_svg_chordSource, target = d3_svg_chordTarget, projection = d3_svg_diagonalProjection;\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  d3.svg.mouse = d3.mouse;\n  d3.svg.touches = d3.touches;\n  d3.svg.symbol = function() {\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * Math.PI / 180);\n  d3.svg.axis = function() {\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var ticks = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments_) : scale.domain() : tickValues, tickFormat = tickFormat_ == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments_) : String : tickFormat_;\n        var subticks = d3_svg_axisSubdivide(scale, ticks, tickSubdivide), subtick = g.selectAll(\".minor\").data(subticks, String), subtickEnter = subtick.enter().insert(\"line\", \"g\").attr(\"class\", \"tick minor\").style(\"opacity\", 1e-6), subtickExit = d3.transition(subtick.exit()).style(\"opacity\", 1e-6).remove(), subtickUpdate = d3.transition(subtick).style(\"opacity\", 1);\n        var tick = g.selectAll(\"g\").data(ticks, String), tickEnter = tick.enter().insert(\"g\", \"path\").style(\"opacity\", 1e-6), tickExit = d3.transition(tick.exit()).style(\"opacity\", 1e-6).remove(), tickUpdate = d3.transition(tick).style(\"opacity\", 1), tickTransform;\n        var range = d3_scaleRange(scale), path = g.selectAll(\".domain\").data([ 0 ]), pathEnter = path.enter().append(\"path\").attr(\"class\", \"domain\"), pathUpdate = d3.transition(path);\n        var scale1 = scale.copy(), scale0 = this.__chart__ || scale1;\n        this.__chart__ = scale1;\n        tickEnter.append(\"line\").attr(\"class\", \"tick\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\");\n        switch (orient) {\n         case \"bottom\":\n          {\n            tickTransform = d3_svg_axisX;\n            subtickEnter.attr(\"y2\", tickMinorSize);\n            subtickUpdate.attr(\"x2\", 0).attr(\"y2\", tickMinorSize);\n            lineEnter.attr(\"y2\", tickMajorSize);\n            textEnter.attr(\"y\", Math.max(tickMajorSize, 0) + tickPadding);\n            lineUpdate.attr(\"x2\", 0).attr(\"y2\", tickMajorSize);\n            textUpdate.attr(\"x\", 0).attr(\"y\", Math.max(tickMajorSize, 0) + tickPadding);\n            text.attr(\"dy\", \".71em\").attr(\"text-anchor\", \"middle\");\n            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + tickEndSize + \"V0H\" + range[1] + \"V\" + tickEndSize);\n            break;\n          }\n         case \"top\":\n          {\n            tickTransform = d3_svg_axisX;\n            subtickEnter.attr(\"y2\", -tickMinorSize);\n            subtickUpdate.attr(\"x2\", 0).attr(\"y2\", -tickMinorSize);\n            lineEnter.attr(\"y2\", -tickMajorSize);\n            textEnter.attr(\"y\", -(Math.max(tickMajorSize, 0) + tickPadding));\n            lineUpdate.attr(\"x2\", 0).attr(\"y2\", -tickMajorSize);\n            textUpdate.attr(\"x\", 0).attr(\"y\", -(Math.max(tickMajorSize, 0) + tickPadding));\n            text.attr(\"dy\", \"0em\").attr(\"text-anchor\", \"middle\");\n            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -tickEndSize + \"V0H\" + range[1] + \"V\" + -tickEndSize);\n            break;\n          }\n         case \"left\":\n          {\n            tickTransform = d3_svg_axisY;\n            subtickEnter.attr(\"x2\", -tickMinorSize);\n            subtickUpdate.attr(\"x2\", -tickMinorSize).attr(\"y2\", 0);\n            lineEnter.attr(\"x2\", -tickMajorSize);\n            textEnter.attr(\"x\", -(Math.max(tickMajorSize, 0) + tickPadding));\n            lineUpdate.attr(\"x2\", -tickMajorSize).attr(\"y2\", 0);\n            textUpdate.attr(\"x\", -(Math.max(tickMajorSize, 0) + tickPadding)).attr(\"y\", 0);\n            text.attr(\"dy\", \".32em\").attr(\"text-anchor\", \"end\");\n            pathUpdate.attr(\"d\", \"M\" + -tickEndSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -tickEndSize);\n            break;\n          }\n         case \"right\":\n          {\n            tickTransform = d3_svg_axisY;\n            subtickEnter.attr(\"x2\", tickMinorSize);\n            subtickUpdate.attr(\"x2\", tickMinorSize).attr(\"y2\", 0);\n            lineEnter.attr(\"x2\", tickMajorSize);\n            textEnter.attr(\"x\", Math.max(tickMajorSize, 0) + tickPadding);\n            lineUpdate.attr(\"x2\", tickMajorSize).attr(\"y2\", 0);\n            textUpdate.attr(\"x\", Math.max(tickMajorSize, 0) + tickPadding).attr(\"y\", 0);\n            text.attr(\"dy\", \".32em\").attr(\"text-anchor\", \"start\");\n            pathUpdate.attr(\"d\", \"M\" + tickEndSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + tickEndSize);\n            break;\n          }\n        }\n        if (scale.ticks) {\n          tickEnter.call(tickTransform, scale0);\n          tickUpdate.call(tickTransform, scale1);\n          tickExit.call(tickTransform, scale1);\n          subtickEnter.call(tickTransform, scale0);\n          subtickUpdate.call(tickTransform, scale1);\n          subtickExit.call(tickTransform, scale1);\n        } else {\n          var dx = scale1.rangeBand() / 2, x = function(d) {\n            return scale1(d) + dx;\n          };\n          tickEnter.call(tickTransform, x);\n          tickUpdate.call(tickTransform, x);\n        }\n      });\n    }\n    var scale = d3.scale.linear(), orient = \"bottom\", tickMajorSize = 6, tickMinorSize = 6, tickEndSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_, tickSubdivide = 0;\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x, y, z) {\n      if (!arguments.length) return tickMajorSize;\n      var n = arguments.length - 1;\n      tickMajorSize = +x;\n      tickMinorSize = n > 1 ? +y : tickMajorSize;\n      tickEndSize = n > 0 ? +arguments[n] : tickMajorSize;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function(x) {\n      if (!arguments.length) return tickSubdivide;\n      tickSubdivide = +x;\n      return axis;\n    };\n    return axis;\n  };\n  d3.svg.brush = function() {\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this), bg = g.selectAll(\".background\").data([ 0 ]), fg = g.selectAll(\".extent\").data([ 0 ]), tz = g.selectAll(\".resize\").data(resizes, String), e;\n        g.style(\"pointer-events\", \"all\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        bg.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        fg.enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        tz.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        tz.style(\"display\", brush.empty() ? \"none\" : null);\n        tz.exit().remove();\n        if (x) {\n          e = d3_scaleRange(x);\n          bg.attr(\"x\", e[0]).attr(\"width\", e[1] - e[0]);\n          redrawX(g);\n        }\n        if (y) {\n          e = d3_scaleRange(y);\n          bg.attr(\"y\", e[0]).attr(\"height\", e[1] - e[0]);\n          redrawY(g);\n        }\n        redraw(g);\n      });\n    }\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + extent[+/e$/.test(d)][0] + \",\" + extent[+/^s/.test(d)][1] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", extent[0][0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", extent[1][0] - extent[0][0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", extent[0][1]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", extent[1][1] - extent[0][1]);\n    }\n    function brushstart() {\n      function mouse() {\n        var touches = d3.event.changedTouches;\n        return touches ? d3.touches(target, touches)[0] : d3.mouse(target);\n      }\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= extent[1][0];\n            origin[1] -= extent[1][1];\n            dragging = 2;\n          }\n          d3_eventCancel();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += extent[1][0];\n          origin[1] += extent[1][1];\n          dragging = 0;\n          d3_eventCancel();\n        }\n      }\n      function brushmove() {\n        var point = mouse(), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (extent[0][0] + extent[1][0]) / 2, (extent[0][1] + extent[1][1]) / 2 ];\n            origin[0] = extent[+(point[0] < center[0])][0];\n            origin[1] = extent[+(point[1] < center[1])][1];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], size = extent[1][i] - extent[0][i], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = Math.max(r0, Math.min(r1, point[i]));\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0][i] !== min || extent[1][i] !== max) {\n          extentDomain = null;\n          extent[0][i] = min;\n          extent[1][i] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        event_({\n          type: \"brushend\"\n        });\n        d3_eventCancel();\n      }\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), center, origin = mouse(), offset;\n      var w = d3.select(window).on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend).on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (dragging) {\n        origin[0] = extent[0][0] - origin[0];\n        origin[1] = extent[0][1] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ extent[1 - ex][0] - origin[0], extent[1 - ey][1] - origin[1] ];\n        origin[0] = extent[ex][0];\n        origin[1] = extent[ey][1];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      d3_eventCancel();\n    }\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, resizes = d3_svg_brushResizes[0], extent = [ [ 0, 0 ], [ 0, 0 ] ], extentDomain;\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        z = extentDomain || extent;\n        if (x) {\n          x0 = z[0][0], x1 = z[1][0];\n          if (!extentDomain) {\n            x0 = extent[0][0], x1 = extent[1][0];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          y0 = z[0][1], y1 = z[1][1];\n          if (!extentDomain) {\n            y0 = extent[0][1], y1 = extent[1][1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      extentDomain = [ [ 0, 0 ], [ 0, 0 ] ];\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        extentDomain[0][0] = x0, extentDomain[1][0] = x1;\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        extent[0][0] = x0 | 0, extent[1][0] = x1 | 0;\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        extentDomain[0][1] = y0, extentDomain[1][1] = y1;\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        extent[0][1] = y0 | 0, extent[1][1] = y1 | 0;\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      extentDomain = null;\n      extent[0][0] = extent[0][1] = extent[1][0] = extent[1][1] = 0;\n      return brush;\n    };\n    brush.empty = function() {\n      return x && extent[0][0] === extent[1][0] || y && extent[0][1] === extent[1][1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  d3.behavior = {};\n  d3.behavior.drag = function() {\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", mousedown);\n    }\n    function mousedown() {\n      function point() {\n        var p = target.parentNode;\n        return touchId ? d3.touches(p).filter(function(p) {\n          return p.identifier === touchId;\n        })[0] : d3.mouse(p);\n      }\n      function dragmove() {\n        if (!target.parentNode) return dragend();\n        var p = point(), dx = p[0] - origin_[0], dy = p[1] - origin_[1];\n        moved |= dx | dy;\n        origin_ = p;\n        d3_eventCancel();\n        event_({\n          type: \"drag\",\n          x: p[0] + offset[0],\n          y: p[1] + offset[1],\n          dx: dx,\n          dy: dy\n        });\n      }\n      function dragend() {\n        event_({\n          type: \"dragend\"\n        });\n        if (moved) {\n          d3_eventCancel();\n          if (d3.event.target === eventTarget) w.on(\"click.drag\", click, true);\n        }\n        w.on(touchId ? \"touchmove.drag-\" + touchId : \"mousemove.drag\", null).on(touchId ? \"touchend.drag-\" + touchId : \"mouseup.drag\", null);\n      }\n      function click() {\n        d3_eventCancel();\n        w.on(\"click.drag\", null);\n      }\n      var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, touchId = d3.event.touches && d3.event.changedTouches[0].identifier, offset, origin_ = point(), moved = 0;\n      var w = d3.select(window).on(touchId ? \"touchmove.drag-\" + touchId : \"mousemove.drag\", dragmove).on(touchId ? \"touchend.drag-\" + touchId : \"mouseup.drag\", dragend, true);\n      if (origin) {\n        offset = origin.apply(target, arguments);\n        offset = [ offset.x - origin_[0], offset.y - origin_[1] ];\n      } else {\n        offset = [ 0, 0 ];\n      }\n      if (!touchId) d3_eventCancel();\n      event_({\n        type: \"dragstart\"\n      });\n    }\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null;\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  d3.behavior.zoom = function() {\n    function zoom() {\n      this.on(\"mousedown.zoom\", mousedown).on(\"mousewheel.zoom\", mousewheel).on(\"mousemove.zoom\", mousemove).on(\"DOMMouseScroll.zoom\", mousewheel).on(\"dblclick.zoom\", dblclick).on(\"touchstart.zoom\", touchstart).on(\"touchmove.zoom\", touchmove).on(\"touchend.zoom\", touchstart);\n    }\n    function location(p) {\n      return [ (p[0] - translate[0]) / scale, (p[1] - translate[1]) / scale ];\n    }\n    function point(l) {\n      return [ l[0] * scale + translate[0], l[1] * scale + translate[1] ];\n    }\n    function scaleTo(s) {\n      scale = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      translate[0] += p[0] - l[0];\n      translate[1] += p[1] - l[1];\n    }\n    function dispatch(event) {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - translate[0]) / scale;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - translate[1]) / scale;\n      }).map(y0.invert));\n      d3.event.preventDefault();\n      event({\n        type: \"zoom\",\n        scale: scale,\n        translate: translate\n      });\n    }\n    function mousedown() {\n      function mousemove() {\n        moved = 1;\n        translateTo(d3.mouse(target), l);\n        dispatch(event_);\n      }\n      function mouseup() {\n        if (moved) d3_eventCancel();\n        w.on(\"mousemove.zoom\", null).on(\"mouseup.zoom\", null);\n        if (moved && d3.event.target === eventTarget) w.on(\"click.zoom\", click, true);\n      }\n      function click() {\n        d3_eventCancel();\n        w.on(\"click.zoom\", null);\n      }\n      var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, moved = 0, w = d3.select(window).on(\"mousemove.zoom\", mousemove).on(\"mouseup.zoom\", mouseup), l = location(d3.mouse(target));\n      window.focus();\n      d3_eventCancel();\n    }\n    function mousewheel() {\n      if (!translate0) translate0 = location(d3.mouse(this));\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * scale);\n      translateTo(d3.mouse(this), translate0);\n      dispatch(event.of(this, arguments));\n    }\n    function mousemove() {\n      translate0 = null;\n    }\n    function dblclick() {\n      var p = d3.mouse(this), l = location(p);\n      scaleTo(d3.event.shiftKey ? scale / 2 : scale * 2);\n      translateTo(p, l);\n      dispatch(event.of(this, arguments));\n    }\n    function touchstart() {\n      var touches = d3.touches(this), now = Date.now();\n      scale0 = scale;\n      translate0 = {};\n      touches.forEach(function(t) {\n        translate0[t.identifier] = location(t);\n      });\n      d3_eventCancel();\n      if (touches.length === 1) {\n        if (now - touchtime < 500) {\n          var p = touches[0], l = location(touches[0]);\n          scaleTo(scale * 2);\n          translateTo(p, l);\n          dispatch(event.of(this, arguments));\n        }\n        touchtime = now;\n      }\n    }\n    function touchmove() {\n      var touches = d3.touches(this), p0 = touches[0], l0 = translate0[p0.identifier];\n      if (p1 = touches[1]) {\n        var p1, l1 = translate0[p1.identifier];\n        p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n        l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n        scaleTo(d3.event.scale * scale0);\n      }\n      translateTo(p0, l0);\n      touchtime = null;\n      dispatch(event.of(this, arguments));\n    }\n    var translate = [ 0, 0 ], translate0, scale = 1, scale0, scaleExtent = d3_behavior_zoomInfinity, event = d3_eventDispatch(zoom, \"zoom\"), x0, x1, y0, y1, touchtime;\n    zoom.translate = function(x) {\n      if (!arguments.length) return translate;\n      translate = x.map(Number);\n      return zoom;\n    };\n    zoom.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = +x;\n      return zoom;\n    };\n    zoom.scaleExtent = function(x) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = x == null ? d3_behavior_zoomInfinity : x.map(Number);\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      return zoom;\n    };\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomDiv, d3_behavior_zoomInfinity = [ 0, Infinity ];\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  d3.layout.chord = function() {\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (2 * Math.PI - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    function repulse(node) {\n      return function(quad, x1, y1, x2, y2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dn = 1 / Math.sqrt(dx * dx + dy * dy);\n          if ((x2 - x1) * dn < theta) {\n            var k = quad.charge * dn * dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n            return true;\n          }\n          if (quad.point && isFinite(dn)) {\n            var k = quad.pointCharge * dn * dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    function dragmove(d) {\n      d.px = d3.event.x;\n      d.py = d3.event.y;\n      force.resume();\n    }\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, gravity = .1, theta = .8, interval, nodes = [], links = [], distances, strengths, charges;\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = d3_functor(x);\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = d3_functor(x);\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return theta;\n      theta = x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      function position(dimension, size) {\n        var neighbors = neighbor(i), j = -1, m = neighbors.length, x;\n        while (++j < m) if (!isNaN(x = neighbors[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      function neighbor() {\n        if (!neighbors) {\n          neighbors = [];\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        return neighbors[i];\n      }\n      var i, j, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      distances = [];\n      strengths = [];\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        distances[i] = linkDistance.call(this, o, i);\n        strengths[i] = linkStrength.call(this, o, i);\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      charges = [];\n      if (typeof charge === \"function\") {\n        for (i = 0; i < n; ++i) {\n          charges[i] = +charge.call(this, nodes[i], i);\n        }\n      } else {\n        for (i = 0; i < n; ++i) {\n          charges[i] = charge;\n        }\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart\", d3_layout_forceDragstart).on(\"drag\", dragmove).on(\"dragend\", d3_layout_forceDragend);\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    return d3.rebind(force, event, \"on\");\n  };\n  d3.layout.partition = function() {\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    function pie(data, i) {\n      var values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      });\n      var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n      var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - startAngle) / d3.sum(values);\n      var index = d3.range(data.length);\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      var arcs = [];\n      index.forEach(function(i) {\n        var d;\n        arcs[i] = {\n          data: data[i],\n          value: d = values[i],\n          startAngle: a,\n          endAngle: a += d * k\n        };\n      });\n      return arcs;\n    }\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = 2 * Math.PI;\n    pie.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return pie;\n    };\n    pie.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return pie;\n    };\n    pie.startAngle = function(x) {\n      if (!arguments.length) return startAngle;\n      startAngle = x;\n      return pie;\n    };\n    pie.endAngle = function(x) {\n      if (!arguments.length) return endAngle;\n      endAngle = x;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    function stack(data, index) {\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d, i) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var n = series.length, m = series[0].length, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, max = 0, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  d3.layout.histogram = function() {\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  d3.layout.hierarchy = function() {\n    function recurse(data, depth, nodes) {\n      var childs = children.call(hierarchy, data, depth), node = d3_layout_hierarchyInline ? data : {\n        data: data\n      };\n      node.depth = depth;\n      nodes.push(node);\n      if (childs && (n = childs.length)) {\n        var i = -1, n, c = node.children = [], v = 0, j = depth + 1, d;\n        while (++i < n) {\n          d = recurse(childs[i], j, nodes);\n          d.parent = node;\n          c.push(d);\n          v += d.value;\n        }\n        if (sort) c.sort(sort);\n        if (value) node.value = v;\n      } else if (value) {\n        node.value = +value.call(hierarchy, data, depth) || 0;\n      }\n      return node;\n    }\n    function revalue(node, depth) {\n      var children = node.children, v = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n, j = depth + 1;\n        while (++i < n) v += revalue(children[i], j);\n      } else if (value) {\n        v = +value.call(hierarchy, d3_layout_hierarchyInline ? node : node.data, depth) || 0;\n      }\n      if (value) node.value = v;\n      return v;\n    }\n    function hierarchy(d) {\n      var nodes = [];\n      recurse(d, 0, nodes);\n      return nodes;\n    }\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      revalue(root, 0);\n      return root;\n    };\n    return hierarchy;\n  };\n  var d3_layout_hierarchyInline = false;\n  d3.layout.pack = function() {\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      d3_layout_treeVisitAfter(root, function(d) {\n        d.r = Math.sqrt(d.value);\n      });\n      d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n      var w = size[0], h = size[1], k = Math.max(2 * root.r / w, 2 * root.r / h);\n      if (padding > 0) {\n        var dr = padding * k / 2;\n        d3_layout_treeVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_treeVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n        k = Math.max(2 * root.r / w, 2 * root.r / h);\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, 1 / k);\n      return nodes;\n    }\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ];\n    pack.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  d3.layout.cluster = function() {\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0, kx, ky;\n      d3_layout_treeVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_treeVisitAfter(root, function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ];\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  d3.layout.tree = function() {\n    function tree(d, i) {\n      function firstWalk(node, previousSibling) {\n        var children = node.children, layout = node._tree;\n        if (children && (n = children.length)) {\n          var n, firstChild = children[0], previousChild, ancestor = firstChild, child, i = -1;\n          while (++i < n) {\n            child = children[i];\n            firstWalk(child, previousChild);\n            ancestor = apportion(child, previousChild, ancestor);\n            previousChild = child;\n          }\n          d3_layout_treeShift(node);\n          var midpoint = .5 * (firstChild._tree.prelim + child._tree.prelim);\n          if (previousSibling) {\n            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n            layout.mod = layout.prelim - midpoint;\n          } else {\n            layout.prelim = midpoint;\n          }\n        } else {\n          if (previousSibling) {\n            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n          }\n        }\n      }\n      function secondWalk(node, x) {\n        node.x = node._tree.prelim + x;\n        var children = node.children;\n        if (children && (n = children.length)) {\n          var i = -1, n;\n          x += node._tree.mod;\n          while (++i < n) {\n            secondWalk(children[i], x);\n          }\n        }\n      }\n      function apportion(node, previousSibling, ancestor) {\n        if (previousSibling) {\n          var vip = node, vop = node, vim = previousSibling, vom = node.parent.children[0], sip = vip._tree.mod, sop = vop._tree.mod, sim = vim._tree.mod, som = vom._tree.mod, shift;\n          while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n            vom = d3_layout_treeLeft(vom);\n            vop = d3_layout_treeRight(vop);\n            vop._tree.ancestor = node;\n            shift = vim._tree.prelim + sim - vip._tree.prelim - sip + separation(vim, vip);\n            if (shift > 0) {\n              d3_layout_treeMove(d3_layout_treeAncestor(vim, node, ancestor), node, shift);\n              sip += shift;\n              sop += shift;\n            }\n            sim += vim._tree.mod;\n            sip += vip._tree.mod;\n            som += vom._tree.mod;\n            sop += vop._tree.mod;\n          }\n          if (vim && !d3_layout_treeRight(vop)) {\n            vop._tree.thread = vim;\n            vop._tree.mod += sim - sop;\n          }\n          if (vip && !d3_layout_treeLeft(vom)) {\n            vom._tree.thread = vip;\n            vom._tree.mod += sip - som;\n            ancestor = node;\n          }\n        }\n        return ancestor;\n      }\n      var nodes = hierarchy.call(this, d, i), root = nodes[0];\n      d3_layout_treeVisitAfter(root, function(node, previousSibling) {\n        node._tree = {\n          ancestor: node,\n          prelim: 0,\n          mod: 0,\n          change: 0,\n          shift: 0,\n          number: previousSibling ? previousSibling._tree.number + 1 : 0\n        };\n      });\n      firstWalk(root);\n      secondWalk(root, -root._tree.prelim);\n      var left = d3_layout_treeSearch(root, d3_layout_treeLeftmost), right = d3_layout_treeSearch(root, d3_layout_treeRightmost), deep = d3_layout_treeSearch(root, d3_layout_treeDeepest), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2, y1 = deep.depth || 1;\n      d3_layout_treeVisitAfter(root, function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = node.depth / y1 * size[1];\n        delete node._tree;\n      });\n      return nodes;\n    }\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ];\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  d3.layout.treemap = function() {\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if ((score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, ratio = .5 * (1 + Math.sqrt(5));\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      if (!arguments.length) return padding;\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  d3.csv = d3_dsv(\",\", \"text/csv\");\n  d3.tsv = d3_dsv(\"\t\", \"text/tab-separated-values\");\n  d3.geo = {};\n  var d3_geo_radians = Math.PI / 180;\n  d3.geo.azimuthal = function() {\n    function azimuthal(coordinates) {\n      var x1 = coordinates[0] * d3_geo_radians - x0, y1 = coordinates[1] * d3_geo_radians, cx1 = Math.cos(x1), sx1 = Math.sin(x1), cy1 = Math.cos(y1), sy1 = Math.sin(y1), cc = mode !== \"orthographic\" ? sy0 * sy1 + cy0 * cy1 * cx1 : null, c, k = mode === \"stereographic\" ? 1 / (1 + cc) : mode === \"gnomonic\" ? 1 / cc : mode === \"equidistant\" ? (c = Math.acos(cc), c ? c / Math.sin(c) : 0) : mode === \"equalarea\" ? Math.sqrt(2 / (1 + cc)) : 1, x = k * cy1 * sx1, y = k * (sy0 * cy1 * cx1 - cy0 * sy1);\n      return [ scale * x + translate[0], scale * y + translate[1] ];\n    }\n    var mode = \"orthographic\", origin, scale = 200, translate = [ 480, 250 ], x0, y0, cy0, sy0;\n    azimuthal.invert = function(coordinates) {\n      var x = (coordinates[0] - translate[0]) / scale, y = (coordinates[1] - translate[1]) / scale, p = Math.sqrt(x * x + y * y), c = mode === \"stereographic\" ? 2 * Math.atan(p) : mode === \"gnomonic\" ? Math.atan(p) : mode === \"equidistant\" ? p : mode === \"equalarea\" ? 2 * Math.asin(.5 * p) : Math.asin(p), sc = Math.sin(c), cc = Math.cos(c);\n      return [ (x0 + Math.atan2(x * sc, p * cy0 * cc + y * sy0 * sc)) / d3_geo_radians, Math.asin(cc * sy0 - (p ? y * sc * cy0 / p : 0)) / d3_geo_radians ];\n    };\n    azimuthal.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return azimuthal;\n    };\n    azimuthal.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      x0 = origin[0] * d3_geo_radians;\n      y0 = origin[1] * d3_geo_radians;\n      cy0 = Math.cos(y0);\n      sy0 = Math.sin(y0);\n      return azimuthal;\n    };\n    azimuthal.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = +x;\n      return azimuthal;\n    };\n    azimuthal.translate = function(x) {\n      if (!arguments.length) return translate;\n      translate = [ +x[0], +x[1] ];\n      return azimuthal;\n    };\n    return azimuthal.origin([ 0, 0 ]);\n  };\n  d3.geo.albers = function() {\n    function albers(coordinates) {\n      var t = n * (d3_geo_radians * coordinates[0] - lng0), p = Math.sqrt(C - 2 * n * Math.sin(d3_geo_radians * coordinates[1])) / n;\n      return [ scale * p * Math.sin(t) + translate[0], scale * (p * Math.cos(t) - p0) + translate[1] ];\n    }\n    function reload() {\n      var phi1 = d3_geo_radians * parallels[0], phi2 = d3_geo_radians * parallels[1], lat0 = d3_geo_radians * origin[1], s = Math.sin(phi1), c = Math.cos(phi1);\n      lng0 = d3_geo_radians * origin[0];\n      n = .5 * (s + Math.sin(phi2));\n      C = c * c + 2 * n * s;\n      p0 = Math.sqrt(C - 2 * n * Math.sin(lat0)) / n;\n      return albers;\n    }\n    var origin = [ -98, 38 ], parallels = [ 29.5, 45.5 ], scale = 1e3, translate = [ 480, 250 ], lng0, n, C, p0;\n    albers.invert = function(coordinates) {\n      var x = (coordinates[0] - translate[0]) / scale, y = (coordinates[1] - translate[1]) / scale, p0y = p0 + y, t = Math.atan2(x, p0y), p = Math.sqrt(x * x + p0y * p0y);\n      return [ (lng0 + t / n) / d3_geo_radians, Math.asin((C - p * p * n * n) / (2 * n)) / d3_geo_radians ];\n    };\n    albers.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = [ +x[0], +x[1] ];\n      return reload();\n    };\n    albers.parallels = function(x) {\n      if (!arguments.length) return parallels;\n      parallels = [ +x[0], +x[1] ];\n      return reload();\n    };\n    albers.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = +x;\n      return albers;\n    };\n    albers.translate = function(x) {\n      if (!arguments.length) return translate;\n      translate = [ +x[0], +x[1] ];\n      return albers;\n    };\n    return reload();\n  };\n  d3.geo.albersUsa = function() {\n    function albersUsa(coordinates) {\n      var lon = coordinates[0], lat = coordinates[1];\n      return (lat > 50 ? alaska : lon < -140 ? hawaii : lat < 21 ? puertoRico : lower48)(coordinates);\n    }\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.albers().origin([ -160, 60 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.albers().origin([ -160, 20 ]).parallels([ 8, 18 ]);\n    var puertoRico = d3.geo.albers().origin([ -60, 10 ]).parallels([ 8, 18 ]);\n    albersUsa.scale = function(x) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(x);\n      alaska.scale(x * .6);\n      hawaii.scale(x);\n      puertoRico.scale(x * 1.5);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(x) {\n      if (!arguments.length) return lower48.translate();\n      var dz = lower48.scale() / 1e3, dx = x[0], dy = x[1];\n      lower48.translate(x);\n      alaska.translate([ dx - 400 * dz, dy + 170 * dz ]);\n      hawaii.translate([ dx - 190 * dz, dy + 200 * dz ]);\n      puertoRico.translate([ dx + 580 * dz, dy + 430 * dz ]);\n      return albersUsa;\n    };\n    return albersUsa.scale(lower48.scale());\n  };\n  d3.geo.bonne = function() {\n    function bonne(coordinates) {\n      var x = coordinates[0] * d3_geo_radians - x0, y = coordinates[1] * d3_geo_radians - y0;\n      if (y1) {\n        var p = c1 + y1 - y, E = x * Math.cos(y) / p;\n        x = p * Math.sin(E);\n        y = p * Math.cos(E) - c1;\n      } else {\n        x *= Math.cos(y);\n        y *= -1;\n      }\n      return [ scale * x + translate[0], scale * y + translate[1] ];\n    }\n    var scale = 200, translate = [ 480, 250 ], x0, y0, y1, c1;\n    bonne.invert = function(coordinates) {\n      var x = (coordinates[0] - translate[0]) / scale, y = (coordinates[1] - translate[1]) / scale;\n      if (y1) {\n        var c = c1 + y, p = Math.sqrt(x * x + c * c);\n        y = c1 + y1 - p;\n        x = x0 + p * Math.atan2(x, c) / Math.cos(y);\n      } else {\n        y *= -1;\n        x /= Math.cos(y);\n      }\n      return [ x / d3_geo_radians, y / d3_geo_radians ];\n    };\n    bonne.parallel = function(x) {\n      if (!arguments.length) return y1 / d3_geo_radians;\n      c1 = 1 / Math.tan(y1 = x * d3_geo_radians);\n      return bonne;\n    };\n    bonne.origin = function(x) {\n      if (!arguments.length) return [ x0 / d3_geo_radians, y0 / d3_geo_radians ];\n      x0 = x[0] * d3_geo_radians;\n      y0 = x[1] * d3_geo_radians;\n      return bonne;\n    };\n    bonne.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = +x;\n      return bonne;\n    };\n    bonne.translate = function(x) {\n      if (!arguments.length) return translate;\n      translate = [ +x[0], +x[1] ];\n      return bonne;\n    };\n    return bonne.origin([ 0, 0 ]).parallel(45);\n  };\n  d3.geo.equirectangular = function() {\n    function equirectangular(coordinates) {\n      var x = coordinates[0] / 360, y = -coordinates[1] / 360;\n      return [ scale * x + translate[0], scale * y + translate[1] ];\n    }\n    var scale = 500, translate = [ 480, 250 ];\n    equirectangular.invert = function(coordinates) {\n      var x = (coordinates[0] - translate[0]) / scale, y = (coordinates[1] - translate[1]) / scale;\n      return [ 360 * x, -360 * y ];\n    };\n    equirectangular.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = +x;\n      return equirectangular;\n    };\n    equirectangular.translate = function(x) {\n      if (!arguments.length) return translate;\n      translate = [ +x[0], +x[1] ];\n      return equirectangular;\n    };\n    return equirectangular;\n  };\n  d3.geo.mercator = function() {\n    function mercator(coordinates) {\n      var x = coordinates[0] / 360, y = -(Math.log(Math.tan(Math.PI / 4 + coordinates[1] * d3_geo_radians / 2)) / d3_geo_radians) / 360;\n      return [ scale * x + translate[0], scale * Math.max(-.5, Math.min(.5, y)) + translate[1] ];\n    }\n    var scale = 500, translate = [ 480, 250 ];\n    mercator.invert = function(coordinates) {\n      var x = (coordinates[0] - translate[0]) / scale, y = (coordinates[1] - translate[1]) / scale;\n      return [ 360 * x, 2 * Math.atan(Math.exp(-360 * y * d3_geo_radians)) / d3_geo_radians - 90 ];\n    };\n    mercator.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = +x;\n      return mercator;\n    };\n    mercator.translate = function(x) {\n      if (!arguments.length) return translate;\n      translate = [ +x[0], +x[1] ];\n      return mercator;\n    };\n    return mercator;\n  };\n  d3.geo.path = function() {\n    function path(d, i) {\n      if (typeof pointRadius === \"function\") pointCircle = d3_path_circle(pointRadius.apply(this, arguments));\n      pathType(d);\n      var result = buffer.length ? buffer.join(\"\") : null;\n      buffer = [];\n      return result;\n    }\n    function project(coordinates) {\n      return projection(coordinates).join(\",\");\n    }\n    function polygonArea(coordinates) {\n      var sum = area(coordinates[0]), i = 0, n = coordinates.length;\n      while (++i < n) sum -= area(coordinates[i]);\n      return sum;\n    }\n    function polygonCentroid(coordinates) {\n      var polygon = d3.geom.polygon(coordinates[0].map(projection)), area = polygon.area(), centroid = polygon.centroid(area < 0 ? (area *= -1, 1) : -1), x = centroid[0], y = centroid[1], z = area, i = 0, n = coordinates.length;\n      while (++i < n) {\n        polygon = d3.geom.polygon(coordinates[i].map(projection));\n        area = polygon.area();\n        centroid = polygon.centroid(area < 0 ? (area *= -1, 1) : -1);\n        x -= centroid[0];\n        y -= centroid[1];\n        z -= area;\n      }\n      return [ x, y, 6 * z ];\n    }\n    function area(coordinates) {\n      return Math.abs(d3.geom.polygon(coordinates.map(projection)).area());\n    }\n    var pointRadius = 4.5, pointCircle = d3_path_circle(pointRadius), projection = d3.geo.albersUsa(), buffer = [];\n    var pathType = d3_geo_type({\n      FeatureCollection: function(o) {\n        var features = o.features, i = -1, n = features.length;\n        while (++i < n) buffer.push(pathType(features[i].geometry));\n      },\n      Feature: function(o) {\n        pathType(o.geometry);\n      },\n      Point: function(o) {\n        buffer.push(\"M\", project(o.coordinates), pointCircle);\n      },\n      MultiPoint: function(o) {\n        var coordinates = o.coordinates, i = -1, n = coordinates.length;\n        while (++i < n) buffer.push(\"M\", project(coordinates[i]), pointCircle);\n      },\n      LineString: function(o) {\n        var coordinates = o.coordinates, i = -1, n = coordinates.length;\n        buffer.push(\"M\");\n        while (++i < n) buffer.push(project(coordinates[i]), \"L\");\n        buffer.pop();\n      },\n      MultiLineString: function(o) {\n        var coordinates = o.coordinates, i = -1, n = coordinates.length, subcoordinates, j, m;\n        while (++i < n) {\n          subcoordinates = coordinates[i];\n          j = -1;\n          m = subcoordinates.length;\n          buffer.push(\"M\");\n          while (++j < m) buffer.push(project(subcoordinates[j]), \"L\");\n          buffer.pop();\n        }\n      },\n      Polygon: function(o) {\n        var coordinates = o.coordinates, i = -1, n = coordinates.length, subcoordinates, j, m;\n        while (++i < n) {\n          subcoordinates = coordinates[i];\n          j = -1;\n          if ((m = subcoordinates.length - 1) > 0) {\n            buffer.push(\"M\");\n            while (++j < m) buffer.push(project(subcoordinates[j]), \"L\");\n            buffer[buffer.length - 1] = \"Z\";\n          }\n        }\n      },\n      MultiPolygon: function(o) {\n        var coordinates = o.coordinates, i = -1, n = coordinates.length, subcoordinates, j, m, subsubcoordinates, k, p;\n        while (++i < n) {\n          subcoordinates = coordinates[i];\n          j = -1;\n          m = subcoordinates.length;\n          while (++j < m) {\n            subsubcoordinates = subcoordinates[j];\n            k = -1;\n            if ((p = subsubcoordinates.length - 1) > 0) {\n              buffer.push(\"M\");\n              while (++k < p) buffer.push(project(subsubcoordinates[k]), \"L\");\n              buffer[buffer.length - 1] = \"Z\";\n            }\n          }\n        }\n      },\n      GeometryCollection: function(o) {\n        var geometries = o.geometries, i = -1, n = geometries.length;\n        while (++i < n) buffer.push(pathType(geometries[i]));\n      }\n    });\n    var areaType = path.area = d3_geo_type({\n      FeatureCollection: function(o) {\n        var area = 0, features = o.features, i = -1, n = features.length;\n        while (++i < n) area += areaType(features[i]);\n        return area;\n      },\n      Feature: function(o) {\n        return areaType(o.geometry);\n      },\n      Polygon: function(o) {\n        return polygonArea(o.coordinates);\n      },\n      MultiPolygon: function(o) {\n        var sum = 0, coordinates = o.coordinates, i = -1, n = coordinates.length;\n        while (++i < n) sum += polygonArea(coordinates[i]);\n        return sum;\n      },\n      GeometryCollection: function(o) {\n        var sum = 0, geometries = o.geometries, i = -1, n = geometries.length;\n        while (++i < n) sum += areaType(geometries[i]);\n        return sum;\n      }\n    }, 0);\n    var centroidType = path.centroid = d3_geo_type({\n      Feature: function(o) {\n        return centroidType(o.geometry);\n      },\n      Polygon: function(o) {\n        var centroid = polygonCentroid(o.coordinates);\n        return [ centroid[0] / centroid[2], centroid[1] / centroid[2] ];\n      },\n      MultiPolygon: function(o) {\n        var area = 0, coordinates = o.coordinates, centroid, x = 0, y = 0, z = 0, i = -1, n = coordinates.length;\n        while (++i < n) {\n          centroid = polygonCentroid(coordinates[i]);\n          x += centroid[0];\n          y += centroid[1];\n          z += centroid[2];\n        }\n        return [ x / z, y / z ];\n      }\n    });\n    path.projection = function(x) {\n      projection = x;\n      return path;\n    };\n    path.pointRadius = function(x) {\n      if (typeof x === \"function\") pointRadius = x; else {\n        pointRadius = +x;\n        pointCircle = d3_path_circle(pointRadius);\n      }\n      return path;\n    };\n    return path;\n  };\n  d3.geo.bounds = function(feature) {\n    var left = Infinity, bottom = Infinity, right = -Infinity, top = -Infinity;\n    d3_geo_bounds(feature, function(x, y) {\n      if (x < left) left = x;\n      if (x > right) right = x;\n      if (y < bottom) bottom = y;\n      if (y > top) top = y;\n    });\n    return [ [ left, bottom ], [ right, top ] ];\n  };\n  var d3_geo_boundsTypes = {\n    Feature: d3_geo_boundsFeature,\n    FeatureCollection: d3_geo_boundsFeatureCollection,\n    GeometryCollection: d3_geo_boundsGeometryCollection,\n    LineString: d3_geo_boundsLineString,\n    MultiLineString: d3_geo_boundsMultiLineString,\n    MultiPoint: d3_geo_boundsLineString,\n    MultiPolygon: d3_geo_boundsMultiPolygon,\n    Point: d3_geo_boundsPoint,\n    Polygon: d3_geo_boundsPolygon\n  };\n  d3.geo.circle = function() {\n    function circle() {}\n    function visible(point) {\n      return arc.distance(point) < radians;\n    }\n    function clip(coordinates) {\n      var i = -1, n = coordinates.length, clipped = [], p0, p1, p2, d0, d1;\n      while (++i < n) {\n        d1 = arc.distance(p2 = coordinates[i]);\n        if (d1 < radians) {\n          if (p1) clipped.push(d3_geo_greatArcInterpolate(p1, p2)((d0 - radians) / (d0 - d1)));\n          clipped.push(p2);\n          p0 = p1 = null;\n        } else {\n          p1 = p2;\n          if (!p0 && clipped.length) {\n            clipped.push(d3_geo_greatArcInterpolate(clipped[clipped.length - 1], p1)((radians - d0) / (d1 - d0)));\n            p0 = p1;\n          }\n        }\n        d0 = d1;\n      }\n      p0 = coordinates[0];\n      p1 = clipped[0];\n      if (p1 && p2[0] === p0[0] && p2[1] === p0[1] && !(p2[0] === p1[0] && p2[1] === p1[1])) {\n        clipped.push(p1);\n      }\n      return resample(clipped);\n    }\n    function resample(coordinates) {\n      var i = 0, n = coordinates.length, j, m, resampled = n ? [ coordinates[0] ] : coordinates, resamples, origin = arc.source();\n      while (++i < n) {\n        resamples = arc.source(coordinates[i - 1])(coordinates[i]).coordinates;\n        for (j = 0, m = resamples.length; ++j < m; ) resampled.push(resamples[j]);\n      }\n      arc.source(origin);\n      return resampled;\n    }\n    var origin = [ 0, 0 ], degrees = 90 - .01, radians = degrees * d3_geo_radians, arc = d3.geo.greatArc().source(origin).target(d3_identity);\n    circle.clip = function(d) {\n      if (typeof origin === \"function\") arc.source(origin.apply(this, arguments));\n      return clipType(d) || null;\n    };\n    var clipType = d3_geo_type({\n      FeatureCollection: function(o) {\n        var features = o.features.map(clipType).filter(d3_identity);\n        return features && (o = Object.create(o), o.features = features, o);\n      },\n      Feature: function(o) {\n        var geometry = clipType(o.geometry);\n        return geometry && (o = Object.create(o), o.geometry = geometry, o);\n      },\n      Point: function(o) {\n        return visible(o.coordinates) && o;\n      },\n      MultiPoint: function(o) {\n        var coordinates = o.coordinates.filter(visible);\n        return coordinates.length && {\n          type: o.type,\n          coordinates: coordinates\n        };\n      },\n      LineString: function(o) {\n        var coordinates = clip(o.coordinates);\n        return coordinates.length && (o = Object.create(o), o.coordinates = coordinates, o);\n      },\n      MultiLineString: function(o) {\n        var coordinates = o.coordinates.map(clip).filter(function(d) {\n          return d.length;\n        });\n        return coordinates.length && (o = Object.create(o), o.coordinates = coordinates, o);\n      },\n      Polygon: function(o) {\n        var coordinates = o.coordinates.map(clip);\n        return coordinates[0].length && (o = Object.create(o), o.coordinates = coordinates, o);\n      },\n      MultiPolygon: function(o) {\n        var coordinates = o.coordinates.map(function(d) {\n          return d.map(clip);\n        }).filter(function(d) {\n          return d[0].length;\n        });\n        return coordinates.length && (o = Object.create(o), o.coordinates = coordinates, o);\n      },\n      GeometryCollection: function(o) {\n        var geometries = o.geometries.map(clipType).filter(d3_identity);\n        return geometries.length && (o = Object.create(o), o.geometries = geometries, o);\n      }\n    });\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      if (typeof origin !== \"function\") arc.source(origin);\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return degrees;\n      radians = (degrees = +x) * d3_geo_radians;\n      return circle;\n    };\n    return d3.rebind(circle, arc, \"precision\");\n  };\n  d3.geo.greatArc = function() {\n    function greatArc() {\n      var d = greatArc.distance.apply(this, arguments), t = 0, dt = precision / d, coordinates = [ p0 ];\n      while ((t += dt) < 1) coordinates.push(interpolate(t));\n      coordinates.push(p1);\n      return {\n        type: \"LineString\",\n        coordinates: coordinates\n      };\n    }\n    var source = d3_geo_greatArcSource, p0, target = d3_geo_greatArcTarget, p1, precision = 6 * d3_geo_radians, interpolate = d3_geo_greatArcInterpolator();\n    greatArc.distance = function() {\n      if (typeof source === \"function\") interpolate.source(p0 = source.apply(this, arguments));\n      if (typeof target === \"function\") interpolate.target(p1 = target.apply(this, arguments));\n      return interpolate.distance();\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _;\n      if (typeof source !== \"function\") interpolate.source(p0 = source);\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _;\n      if (typeof target !== \"function\") interpolate.target(p1 = target);\n      return greatArc;\n    };\n    greatArc.precision = function(_) {\n      if (!arguments.length) return precision / d3_geo_radians;\n      precision = _ * d3_geo_radians;\n      return greatArc;\n    };\n    return greatArc;\n  };\n  d3.geo.greatCircle = d3.geo.circle;\n  d3.geom = {};\n  d3.geom.contour = function(grid, start) {\n    var s = start || d3_geom_contourStart(grid), c = [], x = s[0], y = s[1], dx = 0, dy = 0, pdx = NaN, pdy = NaN, i = 0;\n    do {\n      i = 0;\n      if (grid(x - 1, y - 1)) i += 1;\n      if (grid(x, y - 1)) i += 2;\n      if (grid(x - 1, y)) i += 4;\n      if (grid(x, y)) i += 8;\n      if (i === 6) {\n        dx = pdy === -1 ? -1 : 1;\n        dy = 0;\n      } else if (i === 9) {\n        dx = 0;\n        dy = pdx === 1 ? -1 : 1;\n      } else {\n        dx = d3_geom_contourDx[i];\n        dy = d3_geom_contourDy[i];\n      }\n      if (dx != pdx && dy != pdy) {\n        c.push([ x, y ]);\n        pdx = dx;\n        pdy = dy;\n      }\n      x += dx;\n      y += dy;\n    } while (s[0] != x || s[1] != y);\n    return c;\n  };\n  var d3_geom_contourDx = [ 1, 0, 1, 1, -1, 0, -1, 1, 0, 0, 0, 0, -1, 0, -1, NaN ], d3_geom_contourDy = [ 0, -1, 0, 0, 0, -1, 0, 0, 1, -1, 1, 1, 0, -1, 0, NaN ];\n  d3.geom.hull = function(vertices) {\n    if (vertices.length < 3) return [];\n    var len = vertices.length, plen = len - 1, points = [], stack = [], i, j, h = 0, x1, y1, x2, y2, u, v, a, sp;\n    for (i = 1; i < len; ++i) {\n      if (vertices[i][1] < vertices[h][1]) {\n        h = i;\n      } else if (vertices[i][1] == vertices[h][1]) {\n        h = vertices[i][0] < vertices[h][0] ? i : h;\n      }\n    }\n    for (i = 0; i < len; ++i) {\n      if (i === h) continue;\n      y1 = vertices[i][1] - vertices[h][1];\n      x1 = vertices[i][0] - vertices[h][0];\n      points.push({\n        angle: Math.atan2(y1, x1),\n        index: i\n      });\n    }\n    points.sort(function(a, b) {\n      return a.angle - b.angle;\n    });\n    a = points[0].angle;\n    v = points[0].index;\n    u = 0;\n    for (i = 1; i < plen; ++i) {\n      j = points[i].index;\n      if (a == points[i].angle) {\n        x1 = vertices[v][0] - vertices[h][0];\n        y1 = vertices[v][1] - vertices[h][1];\n        x2 = vertices[j][0] - vertices[h][0];\n        y2 = vertices[j][1] - vertices[h][1];\n        if (x1 * x1 + y1 * y1 >= x2 * x2 + y2 * y2) {\n          points[i].index = -1;\n        } else {\n          points[u].index = -1;\n          a = points[i].angle;\n          u = i;\n          v = j;\n        }\n      } else {\n        a = points[i].angle;\n        u = i;\n        v = j;\n      }\n    }\n    stack.push(h);\n    for (i = 0, j = 0; i < 2; ++j) {\n      if (points[j].index !== -1) {\n        stack.push(points[j].index);\n        i++;\n      }\n    }\n    sp = stack.length;\n    for (; j < plen; ++j) {\n      if (points[j].index === -1) continue;\n      while (!d3_geom_hullCCW(stack[sp - 2], stack[sp - 1], points[j].index, vertices)) {\n        --sp;\n      }\n      stack[sp++] = points[j].index;\n    }\n    var poly = [];\n    for (i = 0; i < sp; ++i) {\n      poly.push(vertices[stack[i]]);\n    }\n    return poly;\n  };\n  d3.geom.polygon = function(coordinates) {\n    coordinates.area = function() {\n      var i = 0, n = coordinates.length, a = coordinates[n - 1][0] * coordinates[0][1], b = coordinates[n - 1][1] * coordinates[0][0];\n      while (++i < n) {\n        a += coordinates[i - 1][0] * coordinates[i][1];\n        b += coordinates[i - 1][1] * coordinates[i][0];\n      }\n      return (b - a) * .5;\n    };\n    coordinates.centroid = function(k) {\n      var i = -1, n = coordinates.length, x = 0, y = 0, a, b = coordinates[n - 1], c;\n      if (!arguments.length) k = -1 / (6 * coordinates.area());\n      while (++i < n) {\n        a = b;\n        b = coordinates[i];\n        c = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * c;\n        y += (a[1] + b[1]) * c;\n      }\n      return [ x * k, y * k ];\n    };\n    coordinates.clip = function(subject) {\n      var input, i = -1, n = coordinates.length, j, m, a = coordinates[n - 1], b, c, d;\n      while (++i < n) {\n        input = subject.slice();\n        subject.length = 0;\n        b = coordinates[i];\n        c = input[(m = input.length) - 1];\n        j = -1;\n        while (++j < m) {\n          d = input[j];\n          if (d3_geom_polygonInside(d, a, b)) {\n            if (!d3_geom_polygonInside(c, a, b)) {\n              subject.push(d3_geom_polygonIntersect(c, d, a, b));\n            }\n            subject.push(d);\n          } else if (d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          c = d;\n        }\n        a = b;\n      }\n      return subject;\n    };\n    return coordinates;\n  };\n  d3.geom.voronoi = function(vertices) {\n    var polygons = vertices.map(function() {\n      return [];\n    });\n    d3_voronoi_tessellate(vertices, function(e) {\n      var s1, s2, x1, x2, y1, y2;\n      if (e.a === 1 && e.b >= 0) {\n        s1 = e.ep.r;\n        s2 = e.ep.l;\n      } else {\n        s1 = e.ep.l;\n        s2 = e.ep.r;\n      }\n      if (e.a === 1) {\n        y1 = s1 ? s1.y : -1e6;\n        x1 = e.c - e.b * y1;\n        y2 = s2 ? s2.y : 1e6;\n        x2 = e.c - e.b * y2;\n      } else {\n        x1 = s1 ? s1.x : -1e6;\n        y1 = e.c - e.a * x1;\n        x2 = s2 ? s2.x : 1e6;\n        y2 = e.c - e.a * x2;\n      }\n      var v1 = [ x1, y1 ], v2 = [ x2, y2 ];\n      polygons[e.region.l.index].push(v1, v2);\n      polygons[e.region.r.index].push(v1, v2);\n    });\n    return polygons.map(function(polygon, i) {\n      var cx = vertices[i][0], cy = vertices[i][1];\n      polygon.forEach(function(v) {\n        v.angle = Math.atan2(v[0] - cx, v[1] - cy);\n      });\n      return polygon.sort(function(a, b) {\n        return a.angle - b.angle;\n      }).filter(function(d, i) {\n        return !i || d.angle - polygon[i - 1].angle > 1e-10;\n      });\n    });\n  };\n  var d3_voronoi_opposite = {\n    l: \"r\",\n    r: \"l\"\n  };\n  d3.geom.delaunay = function(vertices) {\n    var edges = vertices.map(function() {\n      return [];\n    }), triangles = [];\n    d3_voronoi_tessellate(vertices, function(e) {\n      edges[e.region.l.index].push(vertices[e.region.r.index]);\n    });\n    edges.forEach(function(edge, i) {\n      var v = vertices[i], cx = v[0], cy = v[1];\n      edge.forEach(function(v) {\n        v.angle = Math.atan2(v[0] - cx, v[1] - cy);\n      });\n      edge.sort(function(a, b) {\n        return a.angle - b.angle;\n      });\n      for (var j = 0, m = edge.length - 1; j < m; j++) {\n        triangles.push([ v, edge[j], edge[j + 1] ]);\n      }\n    });\n    return triangles;\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    function insert(n, p, x1, y1, x2, y2) {\n      if (isNaN(p.x) || isNaN(p.y)) return;\n      if (n.leaf) {\n        var v = n.point;\n        if (v) {\n          if (Math.abs(v.x - p.x) + Math.abs(v.y - p.y) < .01) {\n            insertChild(n, p, x1, y1, x2, y2);\n          } else {\n            n.point = null;\n            insertChild(n, v, x1, y1, x2, y2);\n            insertChild(n, p, x1, y1, x2, y2);\n          }\n        } else {\n          n.point = p;\n        }\n      } else {\n        insertChild(n, p, x1, y1, x2, y2);\n      }\n    }\n    function insertChild(n, p, x1, y1, x2, y2) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = p.x >= sx, bottom = p.y >= sy, i = (bottom << 1) + right;\n      n.leaf = false;\n      n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n      if (right) x1 = sx; else x2 = sx;\n      if (bottom) y1 = sy; else y2 = sy;\n      insert(n, p, x1, y1, x2, y2);\n    }\n    var p, i = -1, n = points.length;\n    if (n && isNaN(points[0].x)) points = points.map(d3_geom_quadtreePoint);\n    if (arguments.length < 5) {\n      if (arguments.length === 3) {\n        y2 = x2 = y1;\n        y1 = x1;\n      } else {\n        x1 = y1 = Infinity;\n        x2 = y2 = -Infinity;\n        while (++i < n) {\n          p = points[i];\n          if (p.x < x1) x1 = p.x;\n          if (p.y < y1) y1 = p.y;\n          if (p.x > x2) x2 = p.x;\n          if (p.y > y2) y2 = p.y;\n        }\n        var dx = x2 - x1, dy = y2 - y1;\n        if (dx > dy) y2 = y1 + dx; else x2 = x1 + dy;\n      }\n    }\n    var root = d3_geom_quadtreeNode();\n    root.add = function(p) {\n      insert(root, p, x1, y1, x2, y2);\n    };\n    root.visit = function(f) {\n      d3_geom_quadtreeVisit(f, root, x1, y1, x2, y2);\n    };\n    points.forEach(root.add);\n    return root;\n  };\n  d3.time = {};\n  var d3_time = Date, d3_time_daySymbols = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n  d3_time_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  var d3_time_formatDateTime = \"%a %b %e %H:%M:%S %Y\", d3_time_formatDate = \"%m/%d/%y\", d3_time_formatTime = \"%H:%M:%S\";\n  var d3_time_days = d3_time_daySymbols, d3_time_dayAbbreviations = d3_time_days.map(d3_time_formatAbbreviate), d3_time_months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ], d3_time_monthAbbreviations = d3_time_months.map(d3_time_formatAbbreviate);\n  d3.time.format = function(template) {\n    function format(date) {\n      var string = [], i = -1, j = 0, c, f;\n      while (++i < n) {\n        if (template.charCodeAt(i) == 37) {\n          string.push(template.substring(j, i), (f = d3_time_formats[c = template.charAt(++i)]) ? f(date) : c);\n          j = i + 1;\n        }\n      }\n      string.push(template.substring(j, i));\n      return string.join(\"\");\n    }\n    var n = template.length;\n    format.parse = function(string) {\n      var d = {\n        y: 1900,\n        m: 0,\n        d: 1,\n        H: 0,\n        M: 0,\n        S: 0,\n        L: 0\n      }, i = d3_time_parse(d, template, string, 0);\n      if (i != string.length) return null;\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n      var date = new d3_time;\n      date.setFullYear(d.y, d.m, d.d);\n      date.setHours(d.H, d.M, d.S, d.L);\n      return date;\n    };\n    format.toString = function() {\n      return template;\n    };\n    return format;\n  };\n  var d3_time_zfill2 = d3.format(\"02d\"), d3_time_zfill3 = d3.format(\"03d\"), d3_time_zfill4 = d3.format(\"04d\"), d3_time_sfill2 = d3.format(\"2d\");\n  var d3_time_dayRe = d3_time_formatRe(d3_time_days), d3_time_dayAbbrevRe = d3_time_formatRe(d3_time_dayAbbreviations), d3_time_monthRe = d3_time_formatRe(d3_time_months), d3_time_monthLookup = d3_time_formatLookup(d3_time_months), d3_time_monthAbbrevRe = d3_time_formatRe(d3_time_monthAbbreviations), d3_time_monthAbbrevLookup = d3_time_formatLookup(d3_time_monthAbbreviations);\n  var d3_time_formats = {\n    a: function(d) {\n      return d3_time_dayAbbreviations[d.getDay()];\n    },\n    A: function(d) {\n      return d3_time_days[d.getDay()];\n    },\n    b: function(d) {\n      return d3_time_monthAbbreviations[d.getMonth()];\n    },\n    B: function(d) {\n      return d3_time_months[d.getMonth()];\n    },\n    c: d3.time.format(d3_time_formatDateTime),\n    d: function(d) {\n      return d3_time_zfill2(d.getDate());\n    },\n    e: function(d) {\n      return d3_time_sfill2(d.getDate());\n    },\n    H: function(d) {\n      return d3_time_zfill2(d.getHours());\n    },\n    I: function(d) {\n      return d3_time_zfill2(d.getHours() % 12 || 12);\n    },\n    j: function(d) {\n      return d3_time_zfill3(1 + d3.time.dayOfYear(d));\n    },\n    L: function(d) {\n      return d3_time_zfill3(d.getMilliseconds());\n    },\n    m: function(d) {\n      return d3_time_zfill2(d.getMonth() + 1);\n    },\n    M: function(d) {\n      return d3_time_zfill2(d.getMinutes());\n    },\n    p: function(d) {\n      return d.getHours() >= 12 ? \"PM\" : \"AM\";\n    },\n    S: function(d) {\n      return d3_time_zfill2(d.getSeconds());\n    },\n    U: function(d) {\n      return d3_time_zfill2(d3.time.sundayOfYear(d));\n    },\n    w: function(d) {\n      return d.getDay();\n    },\n    W: function(d) {\n      return d3_time_zfill2(d3.time.mondayOfYear(d));\n    },\n    x: d3.time.format(d3_time_formatDate),\n    X: d3.time.format(d3_time_formatTime),\n    y: function(d) {\n      return d3_time_zfill2(d.getFullYear() % 100);\n    },\n    Y: function(d) {\n      return d3_time_zfill4(d.getFullYear() % 1e4);\n    },\n    Z: d3_time_zone,\n    \"%\": function(d) {\n      return \"%\";\n    }\n  };\n  var d3_time_parsers = {\n    a: d3_time_parseWeekdayAbbrev,\n    A: d3_time_parseWeekday,\n    b: d3_time_parseMonthAbbrev,\n    B: d3_time_parseMonth,\n    c: d3_time_parseLocaleFull,\n    d: d3_time_parseDay,\n    e: d3_time_parseDay,\n    H: d3_time_parseHour24,\n    I: d3_time_parseHour24,\n    L: d3_time_parseMilliseconds,\n    m: d3_time_parseMonthNumber,\n    M: d3_time_parseMinutes,\n    p: d3_time_parseAmPm,\n    S: d3_time_parseSeconds,\n    x: d3_time_parseLocaleDate,\n    X: d3_time_parseLocaleTime,\n    y: d3_time_parseYear,\n    Y: d3_time_parseFullYear\n  };\n  var d3_time_numberRe = /^\\s*\\d+/;\n  var d3_time_amPmLookup = d3.map({\n    am: 0,\n    pm: 1\n  });\n  d3.time.format.utc = function(template) {\n    function format(date) {\n      try {\n        d3_time = d3_time_utc;\n        var utc = new d3_time;\n        utc._ = date;\n        return local(utc);\n      } finally {\n        d3_time = Date;\n      }\n    }\n    var local = d3.time.format(template);\n    format.parse = function(string) {\n      try {\n        d3_time = d3_time_utc;\n        var date = local.parse(string);\n        return date && date._;\n      } finally {\n        d3_time = Date;\n      }\n    };\n    format.toString = local.toString;\n    return format;\n  };\n  var d3_time_formatIso = d3.time.format.utc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3.time.format.iso = Date.prototype.toISOString ? d3_time_formatIsoNative : d3_time_formatIso;\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3.time.second = d3_time_interval(function(date) {\n    return new d3_time(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3.time.seconds = d3.time.second.range;\n  d3.time.seconds.utc = d3.time.second.utc.range;\n  d3.time.minute = d3_time_interval(function(date) {\n    return new d3_time(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3.time.minutes = d3.time.minute.range;\n  d3.time.minutes.utc = d3.time.minute.utc.range;\n  d3.time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_time((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3.time.hours = d3.time.hour.range;\n  d3.time.hours.utc = d3.time.hour.utc.range;\n  d3.time.day = d3_time_interval(function(date) {\n    var day = new d3_time(1970, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3.time.days = d3.time.day.range;\n  d3.time.days.utc = d3.time.day.utc.range;\n  d3.time.dayOfYear = function(date) {\n    var year = d3.time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  d3_time_daySymbols.forEach(function(day, i) {\n    day = day.toLowerCase();\n    i = 7 - i;\n    var interval = d3.time[day] = d3_time_interval(function(date) {\n      (date = d3.time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3.time.year(date).getDay();\n      return Math.floor((d3.time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3.time[day + \"s\"] = interval.range;\n    d3.time[day + \"s\"].utc = interval.utc.range;\n    d3.time[day + \"OfYear\"] = function(date) {\n      var day = d3.time.year(date).getDay();\n      return Math.floor((d3.time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3.time.week = d3.time.sunday;\n  d3.time.weeks = d3.time.sunday.range;\n  d3.time.weeks.utc = d3.time.sunday.utc.range;\n  d3.time.weekOfYear = d3.time.sundayOfYear;\n  d3.time.month = d3_time_interval(function(date) {\n    date = d3.time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3.time.months = d3.time.month.range;\n  d3.time.months.utc = d3.time.month.utc.range;\n  d3.time.year = d3_time_interval(function(date) {\n    date = d3.time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3.time.years = d3.time.year.range;\n  d3.time.years.utc = d3.time.year.utc.range;\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3.time.second, 1 ], [ d3.time.second, 5 ], [ d3.time.second, 15 ], [ d3.time.second, 30 ], [ d3.time.minute, 1 ], [ d3.time.minute, 5 ], [ d3.time.minute, 15 ], [ d3.time.minute, 30 ], [ d3.time.hour, 1 ], [ d3.time.hour, 3 ], [ d3.time.hour, 6 ], [ d3.time.hour, 12 ], [ d3.time.day, 1 ], [ d3.time.day, 2 ], [ d3.time.week, 1 ], [ d3.time.month, 1 ], [ d3.time.month, 3 ], [ d3.time.year, 1 ] ];\n  var d3_time_scaleLocalFormats = [ [ d3.time.format(\"%Y\"), function(d) {\n    return true;\n  } ], [ d3.time.format(\"%B\"), function(d) {\n    return d.getMonth();\n  } ], [ d3.time.format(\"%b %d\"), function(d) {\n    return d.getDate() != 1;\n  } ], [ d3.time.format(\"%a %d\"), function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ d3.time.format(\"%I %p\"), function(d) {\n    return d.getHours();\n  } ], [ d3.time.format(\"%I:%M\"), function(d) {\n    return d.getMinutes();\n  } ], [ d3.time.format(\":%S\"), function(d) {\n    return d.getSeconds();\n  } ], [ d3.time.format(\".%L\"), function(d) {\n    return d.getMilliseconds();\n  } ] ];\n  var d3_time_scaleLinear = d3.scale.linear(), d3_time_scaleLocalFormat = d3_time_scaleFormat(d3_time_scaleLocalFormats);\n  d3_time_scaleLocalMethods.year = function(extent, m) {\n    return d3_time_scaleLinear.domain(extent.map(d3_time_scaleGetYear)).ticks(m).map(d3_time_scaleSetYear);\n  };\n  d3.time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUTCMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUTCFormats = [ [ d3.time.format.utc(\"%Y\"), function(d) {\n    return true;\n  } ], [ d3.time.format.utc(\"%B\"), function(d) {\n    return d.getUTCMonth();\n  } ], [ d3.time.format.utc(\"%b %d\"), function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ d3.time.format.utc(\"%a %d\"), function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ d3.time.format.utc(\"%I %p\"), function(d) {\n    return d.getUTCHours();\n  } ], [ d3.time.format.utc(\"%I:%M\"), function(d) {\n    return d.getUTCMinutes();\n  } ], [ d3.time.format.utc(\":%S\"), function(d) {\n    return d.getUTCSeconds();\n  } ], [ d3.time.format.utc(\".%L\"), function(d) {\n    return d.getUTCMilliseconds();\n  } ] ];\n  var d3_time_scaleUTCFormat = d3_time_scaleFormat(d3_time_scaleUTCFormats);\n  d3_time_scaleUTCMethods.year = function(extent, m) {\n    return d3_time_scaleLinear.domain(extent.map(d3_time_scaleUTCGetYear)).ticks(m).map(d3_time_scaleUTCSetYear);\n  };\n  d3.time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUTCMethods, d3_time_scaleUTCFormat);\n  };\n})();\n});\n\nrequire.define(\"/node_modules/mousetrap/package.json\",function(require,module,exports,__dirname,__filename,process,global){module.exports = {\"main\":\"mousetrap.js\"}\n});\n\nrequire.define(\"/node_modules/mousetrap/mousetrap.js\",function(require,module,exports,__dirname,__filename,process,global){/**\n * Copyright 2012 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.1.2\n * @url craig.is/killing/mice\n */\n\n  /**\n   * mapping of special keycodes to their corresponding keys\n   *\n   * everything in this dictionary cannot use keypress events\n   * so it has to be here to map to the correct keycodes for\n   * keyup/keydown events\n   *\n   * @type {Object}\n   */\n  var _MAP = {\n          8: 'backspace',\n          9: 'tab',\n          13: 'enter',\n          16: 'shift',\n          17: 'ctrl',\n          18: 'alt',\n          20: 'capslock',\n          27: 'esc',\n          32: 'space',\n          33: 'pageup',\n          34: 'pagedown',\n          35: 'end',\n          36: 'home',\n          37: 'left',\n          38: 'up',\n          39: 'right',\n          40: 'down',\n          45: 'ins',\n          46: 'del',\n          91: 'meta',\n          93: 'meta',\n          224: 'meta'\n      },\n\n      /**\n       * mapping for special characters so they can support\n       *\n       * this dictionary is only used incase you want to bind a\n       * keyup or keydown event to one of these keys\n       *\n       * @type {Object}\n       */\n      _KEYCODE_MAP = {\n          106: '*',\n          107: '+',\n          109: '-',\n          110: '.',\n          111 : '/',\n          186: ';',\n          187: '=',\n          188: ',',\n          189: '-',\n          190: '.',\n          191: '/',\n          192: '`',\n          219: '[',\n          220: '\\\\',\n          221: ']',\n          222: '\\''\n      },\n\n      /**\n       * this is a mapping of keys that require shift on a US keypad\n       * back to the non shift equivelents\n       *\n       * this is so you can use keyup events with these keys\n       *\n       * note that this will only work reliably on US keyboards\n       *\n       * @type {Object}\n       */\n      _SHIFT_MAP = {\n          '~': '`',\n          '!': '1',\n          '@': '2',\n          '#': '3',\n          '$': '4',\n          '%': '5',\n          '^': '6',\n          '&': '7',\n          '*': '8',\n          '(': '9',\n          ')': '0',\n          '_': '-',\n          '+': '=',\n          ':': ';',\n          '\\\"': '\\'',\n          '<': ',',\n          '>': '.',\n          '?': '/',\n          '|': '\\\\'\n      },\n\n      /**\n       * this is a list of special strings you can use to map\n       * to modifier keys when you specify your keyboard shortcuts\n       *\n       * @type {Object}\n       */\n      _SPECIAL_ALIASES = {\n          'option': 'alt',\n          'command': 'meta',\n          'return': 'enter',\n          'escape': 'esc'\n      },\n\n      /**\n       * variable to store the flipped version of _MAP from above\n       * needed to check if we should use keypress or not when no action\n       * is specified\n       *\n       * @type {Object|undefined}\n       */\n      _REVERSE_MAP,\n\n      /**\n       * a list of all the callbacks setup via Mousetrap.bind()\n       *\n       * @type {Object}\n       */\n      _callbacks = {},\n\n      /**\n       * direct map of string combinations to callbacks used for trigger()\n       *\n       * @type {Object}\n       */\n      _direct_map = {},\n\n      /**\n       * keeps track of what level each sequence is at since multiple\n       * sequences can start out with the same sequence\n       *\n       * @type {Object}\n       */\n      _sequence_levels = {},\n\n      /**\n       * variable to store the setTimeout call\n       *\n       * @type {null|number}\n       */\n      _reset_timer,\n\n      /**\n       * temporary state where we will ignore the next keyup\n       *\n       * @type {boolean|string}\n       */\n      _ignore_next_keyup = false,\n\n      /**\n       * are we currently inside of a sequence?\n       * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n       *\n       * @type {boolean|string}\n       */\n      _inside_sequence = false;\n\n  /**\n   * loop through the f keys, f1 to f19 and add them to the map\n   * programatically\n   */\n  for (var i = 1; i < 20; ++i) {\n      _MAP[111 + i] = 'f' + i;\n  }\n\n  /**\n   * loop through to map numbers on the numeric keypad\n   */\n  for (i = 0; i <= 9; ++i) {\n      _MAP[i + 96] = i;\n  }\n\n  /**\n   * cross browser add event method\n   *\n   * @param {Element|HTMLDocument} object\n   * @param {string} type\n   * @param {Function} callback\n   * @returns void\n   */\n  function _addEvent(object, type, callback) {\n      if (object.addEventListener) {\n          return object.addEventListener(type, callback, false);\n      }\n\n      object.attachEvent('on' + type, callback);\n  }\n\n  /**\n   * takes the event and returns the key character\n   *\n   * @param {Event} e\n   * @return {string}\n   */\n  function _characterFromEvent(e) {\n\n      // for keypress events we should return the character as is\n      if (e.type == 'keypress') {\n          return String.fromCharCode(e.which);\n      }\n\n      // for non keypress events the special maps are needed\n      if (_MAP[e.which]) {\n          return _MAP[e.which];\n      }\n\n      if (_KEYCODE_MAP[e.which]) {\n          return _KEYCODE_MAP[e.which];\n      }\n\n      // if it is not in the special map\n      return String.fromCharCode(e.which).toLowerCase();\n  }\n\n  /**\n   * should we stop this event before firing off callbacks\n   *\n   * @param {Event} e\n   * @return {boolean}\n   */\n  function _stop(e) {\n      var element = e.target || e.srcElement,\n          tag_name = element.tagName;\n\n      // if the element has the class \"mousetrap\" then no need to stop\n      if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n          return false;\n      }\n\n      // stop for input, select, and textarea\n      return tag_name == 'INPUT' || tag_name == 'SELECT' || tag_name == 'TEXTAREA' || (element.contentEditable && element.contentEditable == 'true');\n  }\n\n  /**\n   * checks if two arrays are equal\n   *\n   * @param {Array} modifiers1\n   * @param {Array} modifiers2\n   * @returns {boolean}\n   */\n  function _modifiersMatch(modifiers1, modifiers2) {\n      return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n  }\n\n  /**\n   * resets all sequence counters except for the ones passed in\n   *\n   * @param {Object} do_not_reset\n   * @returns void\n   */\n  function _resetSequences(do_not_reset) {\n      do_not_reset = do_not_reset || {};\n\n      var active_sequences = false,\n          key;\n\n      for (key in _sequence_levels) {\n          if (do_not_reset[key]) {\n              active_sequences = true;\n              continue;\n          }\n          _sequence_levels[key] = 0;\n      }\n\n      if (!active_sequences) {\n          _inside_sequence = false;\n      }\n  }\n\n  /**\n   * finds all callbacks that match based on the keycode, modifiers,\n   * and action\n   *\n   * @param {string} character\n   * @param {Array} modifiers\n   * @param {string} action\n   * @param {boolean=} remove - should we remove any matches\n   * @param {string=} combination\n   * @returns {Array}\n   */\n  function _getMatches(character, modifiers, action, remove, combination) {\n      var i,\n          callback,\n          matches = [];\n\n      // if there are no events related to this keycode\n      if (!_callbacks[character]) {\n          return [];\n      }\n\n      // if a modifier key is coming up on its own we should allow it\n      if (action == 'keyup' && _isModifier(character)) {\n          modifiers = [character];\n      }\n\n      // loop through all callbacks for the key that was pressed\n      // and see if any of them match\n      for (i = 0; i < _callbacks[character].length; ++i) {\n          callback = _callbacks[character][i];\n\n          // if this is a sequence but it is not at the right level\n          // then move onto the next match\n          if (callback.seq && _sequence_levels[callback.seq] != callback.level) {\n              continue;\n          }\n\n          // if the action we are looking for doesn't match the action we got\n          // then we should keep going\n          if (action != callback.action) {\n              continue;\n          }\n\n          // if this is a keypress event that means that we need to only\n          // look at the character, otherwise check the modifiers as\n          // well\n          if (action == 'keypress' || _modifiersMatch(modifiers, callback.modifiers)) {\n\n              // remove is used so if you change your mind and call bind a\n              // second time with a new function the first one is overwritten\n              if (remove && callback.combo == combination) {\n                  _callbacks[character].splice(i, 1);\n              }\n\n              matches.push(callback);\n          }\n      }\n\n      return matches;\n  }\n\n  /**\n   * takes a key event and figures out what the modifiers are\n   *\n   * @param {Event} e\n   * @returns {Array}\n   */\n  function _eventModifiers(e) {\n      var modifiers = [];\n\n      if (e.shiftKey) {\n          modifiers.push('shift');\n      }\n\n      if (e.altKey) {\n          modifiers.push('alt');\n      }\n\n      if (e.ctrlKey) {\n          modifiers.push('ctrl');\n      }\n\n      if (e.metaKey) {\n          modifiers.push('meta');\n      }\n\n      return modifiers;\n  }\n\n  /**\n   * actually calls the callback function\n   *\n   * if your callback function returns false this will use the jquery\n   * convention - prevent default and stop propogation on the event\n   *\n   * @param {Function} callback\n   * @param {Event} e\n   * @returns void\n   */\n  function _fireCallback(callback, e) {\n      if (callback(e) === false) {\n          if (e.preventDefault) {\n              e.preventDefault();\n          }\n\n          if (e.stopPropagation) {\n              e.stopPropagation();\n          }\n\n          e.returnValue = false;\n          e.cancelBubble = true;\n      }\n  }\n\n  /**\n   * handles a character key event\n   *\n   * @param {string} character\n   * @param {Event} e\n   * @returns void\n   */\n  function _handleCharacter(character, e) {\n\n      // if this event should not happen stop here\n      if (_stop(e)) {\n          return;\n      }\n\n      var callbacks = _getMatches(character, _eventModifiers(e), e.type),\n          i,\n          do_not_reset = {},\n          processed_sequence_callback = false;\n\n      // loop through matching callbacks for this key event\n      for (i = 0; i < callbacks.length; ++i) {\n\n          // fire for all sequence callbacks\n          // this is because if for example you have multiple sequences\n          // bound such as \"g i\" and \"g t\" they both need to fire the\n          // callback for matching g cause otherwise you can only ever\n          // match the first one\n          if (callbacks[i].seq) {\n              processed_sequence_callback = true;\n\n              // keep a list of which sequences were matches for later\n              do_not_reset[callbacks[i].seq] = 1;\n              _fireCallback(callbacks[i].callback, e);\n              continue;\n          }\n\n          // if there were no sequence matches but we are still here\n          // that means this is a regular match so we should fire that\n          if (!processed_sequence_callback && !_inside_sequence) {\n              _fireCallback(callbacks[i].callback, e);\n          }\n      }\n\n      // if you are inside of a sequence and the key you are pressing\n      // is not a modifier key then we should reset all sequences\n      // that were not matched by this key event\n      if (e.type == _inside_sequence && !_isModifier(character)) {\n          _resetSequences(do_not_reset);\n      }\n  }\n\n  /**\n   * handles a keydown event\n   *\n   * @param {Event} e\n   * @returns void\n   */\n  function _handleKey(e) {\n\n      // normalize e.which for key events\n      // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n      e.which = typeof e.which == \"number\" ? e.which : e.keyCode;\n\n      var character = _characterFromEvent(e);\n\n      // no character found then stop\n      if (!character) {\n          return;\n      }\n\n      if (e.type == 'keyup' && _ignore_next_keyup == character) {\n          _ignore_next_keyup = false;\n          return;\n      }\n\n      _handleCharacter(character, e);\n  }\n\n  /**\n   * determines if the keycode specified is a modifier key or not\n   *\n   * @param {string} key\n   * @returns {boolean}\n   */\n  function _isModifier(key) {\n      return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n  }\n\n  /**\n   * called to set a 1 second timeout on the specified sequence\n   *\n   * this is so after each key press in the sequence you have 1 second\n   * to press the next key before you have to start over\n   *\n   * @returns void\n   */\n  function _resetSequenceTimer() {\n      clearTimeout(_reset_timer);\n      _reset_timer = setTimeout(_resetSequences, 1000);\n  }\n\n  /**\n   * reverses the map lookup so that we can look for specific keys\n   * to see what can and can't use keypress\n   *\n   * @return {Object}\n   */\n  function _getReverseMap() {\n      if (!_REVERSE_MAP) {\n          _REVERSE_MAP = {};\n          for (var key in _MAP) {\n\n              // pull out the numeric keypad from here cause keypress should\n              // be able to detect the keys from the character\n              if (key > 95 && key < 112) {\n                  continue;\n              }\n\n              if (_MAP.hasOwnProperty(key)) {\n                  _REVERSE_MAP[_MAP[key]] = key;\n              }\n          }\n      }\n      return _REVERSE_MAP;\n  }\n\n  /**\n   * picks the best action based on the key combination\n   *\n   * @param {string} key - character for key\n   * @param {Array} modifiers\n   * @param {string=} action passed in\n   */\n  function _pickBestAction(key, modifiers, action) {\n\n      // if no action was picked in we should try to pick the one\n      // that we think would work best for this key\n      if (!action) {\n          action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n      }\n\n      // modifier keys don't work as expected with keypress,\n      // switch to keydown\n      if (action == 'keypress' && modifiers.length) {\n          action = 'keydown';\n      }\n\n      return action;\n  }\n\n  /**\n   * binds a key sequence to an event\n   *\n   * @param {string} combo - combo specified in bind call\n   * @param {Array} keys\n   * @param {Function} callback\n   * @param {string=} action\n   * @returns void\n   */\n  function _bindSequence(combo, keys, callback, action) {\n\n      // start off by adding a sequence level record for this combination\n      // and setting the level to 0\n      _sequence_levels[combo] = 0;\n\n      // if there is no action pick the best one for the first key\n      // in the sequence\n      if (!action) {\n          action = _pickBestAction(keys[0], []);\n      }\n\n      /**\n       * callback to increase the sequence level for this sequence and reset\n       * all other sequences that were active\n       *\n       * @param {Event} e\n       * @returns void\n       */\n      var _increaseSequence = function(e) {\n              _inside_sequence = action;\n              ++_sequence_levels[combo];\n              _resetSequenceTimer();\n          },\n\n          /**\n           * wraps the specified callback inside of another function in order\n           * to reset all sequence counters as soon as this sequence is done\n           *\n           * @param {Event} e\n           * @returns void\n           */\n          _callbackAndReset = function(e) {\n              _fireCallback(callback, e);\n\n              // we should ignore the next key up if the action is key down\n              // or keypress.  this is so if you finish a sequence and\n              // release the key the final key will not trigger a keyup\n              if (action !== 'keyup') {\n                  _ignore_next_keyup = _characterFromEvent(e);\n              }\n\n              // weird race condition if a sequence ends with the key\n              // another sequence begins with\n              setTimeout(_resetSequences, 10);\n          },\n          i;\n\n      // loop through keys one at a time and bind the appropriate callback\n      // function.  for any key leading up to the final one it should\n      // increase the sequence. after the final, it should reset all sequences\n      for (i = 0; i < keys.length; ++i) {\n          _bindSingle(keys[i], i < keys.length - 1 ? _increaseSequence : _callbackAndReset, action, combo, i);\n      }\n  }\n\n  /**\n   * binds a single keyboard combination\n   *\n   * @param {string} combination\n   * @param {Function} callback\n   * @param {string=} action\n   * @param {string=} sequence_name - name of sequence if part of sequence\n   * @param {number=} level - what part of the sequence the command is\n   * @returns void\n   */\n  function _bindSingle(combination, callback, action, sequence_name, level) {\n\n      // make sure multiple spaces in a row become a single space\n      combination = combination.replace(/\\s+/g, ' ');\n\n      var sequence = combination.split(' '),\n          i,\n          key,\n          keys,\n          modifiers = [];\n\n      // if this pattern is a sequence of keys then run through this method\n      // to reprocess each pattern one key at a time\n      if (sequence.length > 1) {\n          return _bindSequence(combination, sequence, callback, action);\n      }\n\n      // take the keys from this pattern and figure out what the actual\n      // pattern is all about\n      keys = combination === '+' ? ['+'] : combination.split('+');\n\n      for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n\n          // normalize key names\n          if (_SPECIAL_ALIASES[key]) {\n              key = _SPECIAL_ALIASES[key];\n          }\n\n          // if this is not a keypress event then we should\n          // be smart about using shift keys\n          // this will only work for US keyboards however\n          if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n              key = _SHIFT_MAP[key];\n              modifiers.push('shift');\n          }\n\n          // if this key is a modifier then add it to the list of modifiers\n          if (_isModifier(key)) {\n              modifiers.push(key);\n          }\n      }\n\n      // depending on what the key combination is\n      // we will try to pick the best event for it\n      action = _pickBestAction(key, modifiers, action);\n\n      // make sure to initialize array if this is the first time\n      // a callback is added for this key\n      if (!_callbacks[key]) {\n          _callbacks[key] = [];\n      }\n\n      // remove an existing match if there is one\n      _getMatches(key, modifiers, action, !sequence_name, combination);\n\n      // add this call back to the array\n      // if it is a sequence put it at the beginning\n      // if not put it at the end\n      //\n      // this is important because the way these are processed expects\n      // the sequence ones to come first\n      _callbacks[key][sequence_name ? 'unshift' : 'push']({\n          callback: callback,\n          modifiers: modifiers,\n          action: action,\n          seq: sequence_name,\n          level: level,\n          combo: combination\n      });\n  }\n\n  /**\n   * binds multiple combinations to the same callback\n   *\n   * @param {Array} combinations\n   * @param {Function} callback\n   * @param {string|undefined} action\n   * @returns void\n   */\n  function _bindMultiple(combinations, callback, action) {\n      for (var i = 0; i < combinations.length; ++i) {\n          _bindSingle(combinations[i], callback, action);\n      }\n  }\n\n  // start!\n  _addEvent(document, 'keypress', _handleKey);\n  _addEvent(document, 'keydown', _handleKey);\n  _addEvent(document, 'keyup', _handleKey);\n\n  var mousetrap = {\n\n      /**\n       * binds an event to mousetrap\n       *\n       * can be a single key, a combination of keys separated with +,\n       * a comma separated list of keys, an array of keys, or\n       * a sequence of keys separated by spaces\n       *\n       * be sure to list the modifier keys first to make sure that the\n       * correct key ends up getting bound (the last key in the pattern)\n       *\n       * @param {string|Array} keys\n       * @param {Function} callback\n       * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n       * @returns void\n       */\n      bind: function(keys, callback, action) {\n          _bindMultiple(keys instanceof Array ? keys : [keys], callback, action);\n          _direct_map[keys + ':' + action] = callback;\n          return this;\n      },\n\n      /**\n       * unbinds an event to mousetrap\n       *\n       * the unbinding sets the callback function of the specified key combo\n       * to an empty function and deletes the corresponding key in the\n       * _direct_map dict.\n       *\n       * the keycombo+action has to be exactly the same as\n       * it was defined in the bind method\n       *\n       * TODO: actually remove this from the _callbacks dictionary instead\n       * of binding an empty function\n       *\n       * @param {string|Array} keys\n       * @param {string} action\n       * @returns void\n       */\n      unbind: function(keys, action) {\n          if (_direct_map[keys + ':' + action]) {\n              delete _direct_map[keys + ':' + action];\n              this.bind(keys, function() {}, action);\n          }\n          return this;\n      },\n\n      /**\n       * triggers an event that has already been bound\n       *\n       * @param {string} keys\n       * @param {string=} action\n       * @returns void\n       */\n      trigger: function(keys, action) {\n          _direct_map[keys + ':' + action]();\n          return this;\n      },\n\n      /**\n       * resets the library back to its initial state.  this is useful\n       * if you want to clear out the current keyboard shortcuts and bind\n       * new ones - for example if you switch to another page\n       *\n       * @returns void\n       */\n      reset: function() {\n          _callbacks = {};\n          _direct_map = {};\n          return this;\n      }\n  };\n\nmodule.exports = mousetrap;\n\n\n});\n\nrequire.define(\"/node_modules/debounce/package.json\",function(require,module,exports,__dirname,__filename,process,global){module.exports = {\"main\":\"index.js\"}\n});\n\nrequire.define(\"/node_modules/debounce/index.js\",function(require,module,exports,__dirname,__filename,process,global){/**\n * Debounces a function by the given threshold.\n *\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, threshold, execAsap){\n  var timeout;\n\n  return function debounced(){\n    var obj = this, args = arguments;\n\n    function delayed () {\n      if (!execAsap) {\n        func.apply(obj, args);\n      }\n      timeout = null;\n    }\n\n    if (timeout) {\n      clearTimeout(timeout);\n    } else if (execAsap) {\n      func.apply(obj, args);\n    }\n\n    timeout = setTimeout(delayed, threshold || 100);\n  };\n};\n\n});\n\nrequire.define(\"/src/resize.js\",function(require,module,exports,__dirname,__filename,process,global){var resize = module.exports = function(handler) {\n    var original = window.onresize || function (){\n        return true\n    };\n\n    window.onresize = function() {\n        var args = Array.prototype.slice.call(arguments)\n\n        return handler.apply(this, args) !== false &&\n              original.apply(this, args)\n    };\n};\n});\n\nrequire.define(\"/src/index.js\",function(require,module,exports,__dirname,__filename,process,global){var d3 = require('d3')\n  , mousetrap = require('mousetrap')\n  , debounce = require('debounce')\n  , resize = require('./resize')\n\nvar root = document.getElementById('colony')\n  , colony = window.colony\n\nvar nodes = colony.nodes\n  , links = colony.links\n  , scale = colony.scale\n  , focus\n\nvar width = 600\n  , height = 400\n  , link\n  , node\n  , text\n  , textTarget = false\n\nvar colors = {\n      links: 'FAFAFA'\n    , text: {\n        subtitle: 'FAFAFA'\n    }\n    , nodes: {\n        method: function(d) {\n            return groups[d.group].color\n        }\n        , hover: 'FAFAFA'\n        , dep: '252929'\n    }\n}\n\nvar readme = document.getElementById('readme-contents').innerHTML\n\nlinks.forEach(function(link) {\n    var source = nodes[link.source]\n      , target = nodes[link.target]\n\n    source.children = source.children || []\n    source.children.push(link.target)\n\n    target.parents = target.parents || []\n    target.parents.push(link.source)\n})\n\nvar groups = nodes.reduce(function(groups, file) {\n    var group = file.mgroup || 'none'\n      , index = groups.indexOf(group)\n\n    if (index === -1) {\n        index = groups.length\n        groups.push(group)\n    }\n\n    file.group = index\n\n    return groups\n}, [])\n\ngroups = groups.map(function(name, n) {\n    var color = d3.hsl(n / groups.length * 300, 0.7, 0.725)\n\n    return {\n          name: name\n        , color: color.toString()\n    };\n})\n\nvar force = d3.layout.force()\n    .size([width, height])\n    .charge(-50 * colony.scale)\n    .linkDistance(20 * colony.scale)\n    .on('tick', function() {\n        link.attr('x1', function(d) { return d.source.x; })\n            .attr('y1', function(d) { return d.source.y; })\n            .attr('x2', function(d) { return d.target.x; })\n            .attr('y2', function(d) { return d.target.y; })\n\n        node.attr('cx', function(d) { return d.x; })\n            .attr('cy', function(d) { return d.y; })\n\n        if (textTarget) {\n            text.attr('transform'\n                    , 'translate(' + textTarget.x + ',' + textTarget.y + ')')\n        }\n    })\n\nvar vis = d3.select(root)\n    .append('svg')\n    .attr('width', width)\n    .attr('height', height)\n\nforce.nodes(nodes)\n     .links(links)\n     .start()\n\nlink = vis.selectAll('line.link').data(links)\nnode = vis.selectAll('circle.node')\n    .data(nodes, function(d) { return d.filename })\n\nlink.enter()\n    .insert('line', '.node')\n    .attr('class', 'link')\n    .attr('x1', function(d) { return d.source.x; })\n    .attr('y1', function(d) { return d.source.y; })\n    .attr('x2', function(d) { return d.target.x; })\n    .attr('y2', function(d) { return d.target.y; })\n    .style('stroke', colors.links)\n    .style('opacity', function(d) {\n        return d.target.module ? 0.2 : 0.3\n    })\n\nnode.enter()\n    .append('circle')\n    .attr('class', 'node')\n    .attr('cx', function(d) { return d.x })\n    .attr('cy', function(d) { return d.y })\n    .attr('r', function(d) {\n        return scale * (d.root ? 8 : d.module && !d.native ? 5 : 3)\n    })\n    .style('fill', colors.nodes.method)\n    .call(force.drag)\n    .on('mouseover', function(d) {\n        textTarget = d\n\n        text.attr('transform', 'translate(' + d.x + ',' + d.y + ')')\n            .text(d.id)\n            .style('display', null)\n\n        d3.select(this)\n          .style('fill', colors.nodes.hover)\n\n        d3.selectAll(childNodes(d))\n            .style('fill', colors.nodes.hover)\n            .style('stroke', colors.nodes.method)\n            .style('stroke-width', 2)\n\n        d3.selectAll(parentNodes(d))\n            .style('fill', colors.nodes.dep)\n            .style('stroke', colors.nodes.method)\n            .style('stroke-width', 2)\n    })\n    .on('mouseout', function(d) {\n        textTarget = false\n\n        text.style('display', 'none')\n\n        d3.select(this)\n          .style('fill', colors.nodes.method)\n\n        d3.selectAll(childNodes(d))\n            .style('fill', colors.nodes.method)\n            .style('stroke', null)\n\n        d3.selectAll(parentNodes(d))\n            .style('fill', colors.nodes.method)\n            .style('stroke', null)\n    })\n    .on('click', function(d) {\n        if (focus === d) {\n            force.charge(-50 * colony.scale)\n                 .linkDistance(20 * colony.scale)\n                 .linkStrength(1)\n                 .start()\n\n            node.style('opacity', 1)\n            link.style('opacity', function(d) {\n                return d.target.module ? 0.2 : 0.3\n            })\n\n            focus = false\n\n            d3.select('#readme-contents')\n              .html(readme)\n              .classed('showing-code', false)\n\n            return\n        }\n\n        focus = d\n\n        d3.xhr('./files/' + d.filename + '.html', function(res) {\n            if (!res) return\n\n            d3.select('#readme-contents')\n              .html(res.responseText)\n              .classed('showing-code', true)\n\n            document.getElementById('readme')\n                    .scrollTop = 0\n        })\n\n        node.style('opacity', function(o) {\n            o.active = connected(d, o)\n            return o.active ? 1 : 0.2\n        })\n\n        force.charge(function(o) {\n            return (o.active ? -100 : -5) * colony.scale\n        }).linkDistance(function(l) {\n            return (l.source.active && l.target.active ? 100 : 20) * colony.scale\n        }).linkStrength(function(l) {\n            return (l.source === d || l.target === d ? 1 : 0) * colony.scale\n        }).start()\n\n        link.style('opacity', function(l, i) {\n            return l.source.active && l.target.active ? 0.2 : 0.02\n        })\n    })\n\ntext = vis.selectAll('.nodetext')\n    .data([\n          [-1.5,  1.5,  1] // \"Shadows\"\n        , [ 1.5,  1.5,  1]\n        , [-1.5, -1.5,  1]\n        , [ 1.5, -1.5,  1]\n        , [ 0.0,  0.0,  0] // Actual Text\n    ])\n  .enter()\n    .insert('text', ':last-child')\n    .attr('class', 'nodetext')\n    .classed('shadow', function(d) { return d[2] })\n    .attr('dy', function(d) { return d[0] - 10 })\n    .attr('dx', function(d) { return d[1] })\n    .attr('text-anchor', 'middle')\n\nfunction refresh(e) {\n    width = Math.max(window.innerWidth * 0.5, 500)\n    height = window.innerHeight\n\n    force.size([width, height])\n         .resume()\n\n    vis.attr('width', window.innerWidth)\n       .attr('height', height)\n};\n\nfunction childNodes(d) {\n    if (!d.children) return []\n\n    return d.children\n        .map(function(child) {\n            return node[0][child]\n        }).filter(function(child) {\n            return child\n        })\n};\n\nfunction parentNodes(d) {\n    if (!d.parents) return []\n\n    return d.parents\n        .map(function(parent) {\n            return node[0][parent]\n        }).filter(function(parent) {\n            return parent\n        })\n};\n\nfunction connected(d, o) {\n    return o.index === d.index ||\n        (d.children && d.children.indexOf(o.index) !== -1) ||\n        (o.children && o.children.indexOf(d.index) !== -1) ||\n        (o.parents && o.parents.indexOf(d.index) !== -1) ||\n        (d.parents && d.parents.indexOf(o.index) !== -1)\n};\n\nfunction restartForce() {\n    var theta = force.theta()\n\n    force.start()\n         .theta(theta)\n};\n\nresize(debounce(refresh, 500))\nrefresh()\n\nmousetrap.bind(['~', '`'], function() {\n    var readme = d3.select('#readme')\n\n    readme.classed('enlarged', !readme.classed('enlarged'))\n})\n\n});\nrequire(\"/src/index.js\");\n})();\n"}